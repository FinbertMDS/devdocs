{
    "docs": [
        {
            "location": "/", 
            "text": "Overview\n\n\nThis is our developer docs. Our docs includes:\n\n\n\n\nUbuntu\n\n\nGit\n\n\nMagento\n\n\nDocker\n\n\nJenkins\n\n\nMkdocs", 
            "title": "Overview"
        }, 
        {
            "location": "/#overview", 
            "text": "This is our developer docs. Our docs includes:   Ubuntu  Git  Magento  Docker  Jenkins  Mkdocs", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/", 
            "text": "Overview\n\n\nThis is our developer docs about Ubuntu. Our docs includes:\n\n\n\n\nCommand line\n\n\nBash scripts\n\n\nSSH\n\n\nSSL\n\n\nNote\n\n\nDocument Linux", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/#overview", 
            "text": "This is our developer docs about Ubuntu. Our docs includes:   Command line  Bash scripts  SSH  SSL  Note  Document Linux", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/command/", 
            "text": "Overview\n\n\nThis is our developer docs about Command useful in Ubuntu\n\n\nNetwork\n\n\n\n\n\n\nWhat ports are opened \n\nsudo netstat -ntlp \n|\n grep LISTEN\n\n\n\n\n\n\n\nDownload file from link\n\nwget url\nwget -P directory url\nwget -O directory/fileName url", 
            "title": "Command line"
        }, 
        {
            "location": "/ubuntu/command/#overview", 
            "text": "This is our developer docs about Command useful in Ubuntu", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/command/#network", 
            "text": "What ports are opened  sudo netstat -ntlp  |  grep LISTEN    Download file from link wget url\nwget -P directory url\nwget -O directory/fileName url", 
            "title": "Network"
        }, 
        {
            "location": "/ubuntu/bash/", 
            "text": "Overview\n\n\nThis is our developer docs about Bash file and command in bash file\n\n\nArray\n\n\n\n\n\n\nDeclare array\n\narray\n=(\nword \ntwo words\n words\n)\n\n\n\n\n\n\n\n\nCheck array contain element\n\nif\n \n[[\n \n \n${\narray\n[@]\n}\n \n \n=\n~ \n \n${\nvalue\n}\n \n \n]]\n;\n \nthen\n\n    \n# whatever you want to do when arr contains value\n\n\nfi\n\n\n\nif\n \n[[\n ! \n \n${\narray\n[@]\n}\n \n \n=\n~ \n \n${\nvalue\n}\n \n \n]]\n;\n \nthen\n\n    \n# whatever you want to do when arr doesn\nt contain value\n\n\nfi\n\n\n\n\narray\n=(\nword \ntwo words\n words\n)\n  \n\nsearch_string\n=\none\n  \n\nmatch\n=\n$(\necho\n \n${\narray\n[@]:\n0\n}\n \n|\n grep -o \n$search_string\n)\n  \n\n[[\n ! -z \n$match\n \n]]\n \n \necho\n \nfound !", 
            "title": "Bash scripts"
        }, 
        {
            "location": "/ubuntu/bash/#overview", 
            "text": "This is our developer docs about Bash file and command in bash file", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/bash/#array", 
            "text": "Declare array array =( word  two words  words )     Check array contain element if   [[     ${ array [@] }     = ~    ${ value }     ]] ;   then \n     # whatever you want to do when arr contains value  fi  if   [[  !    ${ array [@] }     = ~    ${ value }     ]] ;   then \n     # whatever you want to do when arr doesn t contain value  fi   array =( word  two words  words )    search_string = one    match = $( echo   ${ array [@]: 0 }   |  grep -o  $search_string )    [[  ! -z  $match   ]]     echo   found !", 
            "title": "Array"
        }, 
        {
            "location": "/ubuntu/ssh/", 
            "text": "Overview\n\n\nThis is our developer docs about How to remote to server Ubuntu\n\n\nSSH to server\n\n\nUse Putty\n\n\n\n\nInstall Putty\n\n\nOn Windows: \nhttps://www.sitecuatui.com/tao-ssh-key-bang-puttygen/\n\n\nOn Ubuntu: \nhttps://websiteforstudents.com/installing-putty-on-ubuntu-16-04-17-10-18-04/\n\n\n\n\n\n\nCreate file server.ppk with info about Putty Key\n\n\nFill info about server\n\n\nHost name or Ip\n\n\nPort\n\n\nConnection \n SSH \n Auth then press Browse\u2026 to file server.ppk \n\n\n\n\n\n\n\n\nUse command line on Ubuntu\n\n\n\n\nInstall SSH\n\n\nhttps://help.ubuntu.com/lts/serverguide/openssh-server.html.en\n\n\n\n\n\n\nCreate file \nserver.pem\n with info about Private key\n\n\nConnect to server by command\n\nssh -i server.pem ubuntu@demo-omc1.magestore.com -p \n2213\n\n\n\n\n\n\nCommand line with ssh\n\n\n\n\nConnect to server\n    \nssh \nuser\n@\nremote_host\n -p \nport\n\n\n\n\nCopy file from local host to to remote host\n    \nscp \nfile_path\n \nuser\n@\nremote_host\n:\nremote_dir\n\n\n\n\nCopy file from remote host to local host\n    \nscp \nuser\n@\nremote_host\n:\nremote_file_path\n \nlocal_dir\n\n\n\n\nMultiple files from Local host to the Remote host\n    \nscp \nfile_path\n \nfile_path\n \nuser\n@\nremote_host\n:\nremote_dir\n\n\n\n\nDirectory from Local host to the Remote host\n    \nscp -r \nlocal_dir\n \nuser\n@\nremote_host\n:\nremote_dir\n\n\n\n\nDirectory from Remote host to the Local host\n    \nscp -r \nuser\n@\nremote_host\n:\nremote_dir\n \nlocal_dir\n\n\n\n\n\n\nInfo server\n\n\n\n\nServer:\n\nHOST: 45.77.42.74\nusername: root\npass: 1u,Z#+3d#?@b{.sx\n\n\n\nServer Info\n\n\nSSH\n\nIP: 54.83.169.163\nPort: 2213\nUsername: ubuntu\n\n\n\nPrivate key:\n\n\n\n\nCreate file \nserver.pem\n with info about private key\n\n-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA0GTRLEQ25wcudoa+NKaOG3dKV955ZhjeI/YhU1IFKc7fOM16\nkoXTWPtVE8D09VVkjfWxgQavP8eqcocIEWxNt3uSeFzn0zvUfTL1PeXlx9I3qwOB\nm/NqdGdhL/8NQ4L1LPQ5NYxnwlIMz0S76IMDwSBl9NeVv+swPEejEhbMI5/9yEaO\nMrtwnADBO73NvxHa8/vh9F54YwNE1rV1yksmrzLygBS0+6z2Jefqom6zSgdUONlN\n77JdPPzLZXzWt7nlNAcNHlymiXWWDY2sQl/mU7P6r7FQgjv9SiFca8zrMlT/rmur\nZAQPmkiEZeXfHZg5qoML/CLr/wLBNyJ4pOROkwIDAQABAoIBACSLmZceu1YWj1Jf\n3NlU4BT2/YWdUULTV5mM31lCR/+F9OV8O2OYrnCrWsclDpA7km/Gx4MuDeusczq0\nbXjIunRT6mLLQChuFJyEJDffqkU5m2OVMNSNgny5aHTHUKcnPyHMDoBSiBuu0epD\nToS+/RiQOvEOIYfPkdzwXyub7d7NLbEWKOThpLecn6EubH8FhJihUTgzy0Xb3kHQ\n/sIIZToaqVI6iAuIBL1t+UNuwBTQsItUsxjFQZMeqCjmgLmZy95ggLlbpQhZJJmx\nFk4bQcMKGfkhJUy3iwZ4ZGxLbpSPjiS5IGs1QyzuII6/93UKSgYQUkUHtAdog4Qu\n/x7Nv4ECgYEA+RuzIrM2aFsBXBJ2mLATib1ylTFMstGM6HEf4UjCKIW5BijSFL4j\nM90hC0+CUfhWVviTdvwLbGry8pfsFviGZQuNHTFlCe8dGUybrqw/kQe5P7ICg7zK\nM/zE/lCCjUvu6J1fOK9rMgw0iTFEiS4iQnmJxqK5FuTLsr2mVyuKLlMCgYEA1ijC\nVI32utg2DR1h5jJ57TKSysd1Cc1xuaq3787pv0UqdfocpFZlHIfAxqg2Ow+yhKgn\nwniZrgLWKfsaFEapojvvlqcg8cIaAjnKf4JEa7LBtSZgI6q3+pKrZk+BRqr9aCld\nxNLlv4wLWabi6DBrLu+zs09vYKB+2USG8wlK1sECgYEA8sG1rmkq6kNVbd5oSJ++\nSoqeMRnb/p8LTDGBuc9ntomqJ4B8Sc6JC6/A1f7jpvH1YcfYHSm+ECehHhxC7JfA\nkJPTLtHF/wpQNylaxbwCLllyg8n7fVnrSwJXDuZyczO+XF2QP/Ni6WDPiarDeVPF\n+zXpt/M3oEHS6Bq9EVHS1RUCgYAjAsLSQ+skHJipiDYrBfF835mz4Ou3UIjZC5nK\ncI8yH8KTSvJHw4AALAlN8M381dIfccYeOs0U743Hiy92RR8SUK4YePYfz9Wkq4H5\nWniJCs40KTPqYMx3AGdY8IJ35RhMYQbdWIUKzYBFhczunIvJPpKoK8JPj61tI5DU\nRp6fgQKBgQClAX0rMilvfb7Zi9nrHPc862VndUrepClRw/x/BewqppshWII8qyfv\nnc4tbbeURr/W88zUWZ5fTGYf972UJqOQ5CI0XJFIYr8V7NnNmz9UdCixLgPQQidC\n7JJY4Y72PjbCwA9DJUNwhyxX2pdFjjJqvGrSukP12cTx0WLiIpDFXw==\n-----END RSA PRIVATE KEY-----\n\n\n\n\n\nPutty key\n\n\n\n\nCreate file \nserver.ppk\n with info about Putty Key:\n\nPuTTY-User-Key-File-2: ssh-rsa\nEncryption: none\nComment: imported-openssh-key\nPublic-Lines: 6\nAAAAB3NzaC1yc2EAAAADAQABAAABAQDQZNEsRDbnBy52hr40po4bd0pX3nlmGN4j\n9iFTUgUpzt84zXqShdNY+1UTwPT1VWSN9bGBBq8/x6pyhwgRbE23e5J4XOfTO9R9\nMvU95eXH0jerA4Gb82p0Z2Ev/w1DgvUs9Dk1jGfCUgzPRLvogwPBIGX015W/6zA8\nR6MSFswjn/3IRo4yu3CcAME7vc2/Edrz++H0XnhjA0TWtXXKSyavMvKAFLT7rPYl\n5+qibrNKB1Q42U3vsl08/MtlfNa3ueU0Bw0eXKaJdZYNjaxCX+ZTs/qvsVCCO/1K\nIVxrzOsyVP+ua6tkBA+aSIRl5d8dmDmqgwv8Iuv/AsE3Inik5E6T\nPrivate-Lines: 14\nAAABACSLmZceu1YWj1Jf3NlU4BT2/YWdUULTV5mM31lCR/+F9OV8O2OYrnCrWscl\nDpA7km/Gx4MuDeusczq0bXjIunRT6mLLQChuFJyEJDffqkU5m2OVMNSNgny5aHTH\nUKcnPyHMDoBSiBuu0epDToS+/RiQOvEOIYfPkdzwXyub7d7NLbEWKOThpLecn6Eu\nbH8FhJihUTgzy0Xb3kHQ/sIIZToaqVI6iAuIBL1t+UNuwBTQsItUsxjFQZMeqCjm\ngLmZy95ggLlbpQhZJJmxFk4bQcMKGfkhJUy3iwZ4ZGxLbpSPjiS5IGs1QyzuII6/\n93UKSgYQUkUHtAdog4Qu/x7Nv4EAAACBAPkbsyKzNmhbAVwSdpiwE4m9cpUxTLLR\njOhxH+FIwiiFuQYo0hS+IzPdIQtPglH4Vlb4k3b8C2xq8vKX7Bb4hmULjR0xZQnv\nHRlMm66sP5EHuT+yAoO8yjP8xP5Qgo1L7uidXzivazIMNIkxRIkuIkJ5icaiuRbk\ny7K9plcrii5TAAAAgQDWKMJUjfa62DYNHWHmMnntMpLKx3UJzXG5qrfvzum/RSp1\n+hykVmUch8DGqDY7D7KEqCfCeJmuAtYp+xoURqmiO++WpyDxwhoCOcp/gkRrssG1\nJmAjqrf6kqtmT4FGqv1oKV3E0uW/jAtZpuLoMGsu77OzT29goH7ZRIbzCUrWwQAA\nAIEApQF9KzIpb32+2YvZ6xz3POtlZ3VK3qQpUcP8fwXsKqabIViCPKsn753OLW23\nlEa/1vPM1FmeX0xmH/e9lCajkOQiNFyRSGK/FezZzZs/VHQosS4D0EInQuySWOGO\n9j42wsAPQyVDcIcsV9qXRY4yarxq0rpD9dnE8dFi4iKQxV8=\nPrivate-MAC: d619c293fe0ac660bff38d6c8db7d73736a51826", 
            "title": "SSH"
        }, 
        {
            "location": "/ubuntu/ssh/#overview", 
            "text": "This is our developer docs about How to remote to server Ubuntu", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/ssh/#ssh-to-server", 
            "text": "", 
            "title": "SSH to server"
        }, 
        {
            "location": "/ubuntu/ssh/#use-putty", 
            "text": "Install Putty  On Windows:  https://www.sitecuatui.com/tao-ssh-key-bang-puttygen/  On Ubuntu:  https://websiteforstudents.com/installing-putty-on-ubuntu-16-04-17-10-18-04/    Create file server.ppk with info about Putty Key  Fill info about server  Host name or Ip  Port  Connection   SSH   Auth then press Browse\u2026 to file server.ppk", 
            "title": "Use Putty"
        }, 
        {
            "location": "/ubuntu/ssh/#use-command-line-on-ubuntu", 
            "text": "Install SSH  https://help.ubuntu.com/lts/serverguide/openssh-server.html.en    Create file  server.pem  with info about Private key  Connect to server by command ssh -i server.pem ubuntu@demo-omc1.magestore.com -p  2213", 
            "title": "Use command line on Ubuntu"
        }, 
        {
            "location": "/ubuntu/ssh/#command-line-with-ssh", 
            "text": "Connect to server\n     ssh  user @ remote_host  -p  port   Copy file from local host to to remote host\n     scp  file_path   user @ remote_host : remote_dir   Copy file from remote host to local host\n     scp  user @ remote_host : remote_file_path   local_dir   Multiple files from Local host to the Remote host\n     scp  file_path   file_path   user @ remote_host : remote_dir   Directory from Local host to the Remote host\n     scp -r  local_dir   user @ remote_host : remote_dir   Directory from Remote host to the Local host\n     scp -r  user @ remote_host : remote_dir   local_dir", 
            "title": "Command line with ssh"
        }, 
        {
            "location": "/ubuntu/ssh/#info-server", 
            "text": "Server: HOST: 45.77.42.74\nusername: root\npass: 1u,Z#+3d#?@b{.sx  Server Info  SSH IP: 54.83.169.163\nPort: 2213\nUsername: ubuntu  Private key:   Create file  server.pem  with info about private key -----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA0GTRLEQ25wcudoa+NKaOG3dKV955ZhjeI/YhU1IFKc7fOM16\nkoXTWPtVE8D09VVkjfWxgQavP8eqcocIEWxNt3uSeFzn0zvUfTL1PeXlx9I3qwOB\nm/NqdGdhL/8NQ4L1LPQ5NYxnwlIMz0S76IMDwSBl9NeVv+swPEejEhbMI5/9yEaO\nMrtwnADBO73NvxHa8/vh9F54YwNE1rV1yksmrzLygBS0+6z2Jefqom6zSgdUONlN\n77JdPPzLZXzWt7nlNAcNHlymiXWWDY2sQl/mU7P6r7FQgjv9SiFca8zrMlT/rmur\nZAQPmkiEZeXfHZg5qoML/CLr/wLBNyJ4pOROkwIDAQABAoIBACSLmZceu1YWj1Jf\n3NlU4BT2/YWdUULTV5mM31lCR/+F9OV8O2OYrnCrWsclDpA7km/Gx4MuDeusczq0\nbXjIunRT6mLLQChuFJyEJDffqkU5m2OVMNSNgny5aHTHUKcnPyHMDoBSiBuu0epD\nToS+/RiQOvEOIYfPkdzwXyub7d7NLbEWKOThpLecn6EubH8FhJihUTgzy0Xb3kHQ\n/sIIZToaqVI6iAuIBL1t+UNuwBTQsItUsxjFQZMeqCjmgLmZy95ggLlbpQhZJJmx\nFk4bQcMKGfkhJUy3iwZ4ZGxLbpSPjiS5IGs1QyzuII6/93UKSgYQUkUHtAdog4Qu\n/x7Nv4ECgYEA+RuzIrM2aFsBXBJ2mLATib1ylTFMstGM6HEf4UjCKIW5BijSFL4j\nM90hC0+CUfhWVviTdvwLbGry8pfsFviGZQuNHTFlCe8dGUybrqw/kQe5P7ICg7zK\nM/zE/lCCjUvu6J1fOK9rMgw0iTFEiS4iQnmJxqK5FuTLsr2mVyuKLlMCgYEA1ijC\nVI32utg2DR1h5jJ57TKSysd1Cc1xuaq3787pv0UqdfocpFZlHIfAxqg2Ow+yhKgn\nwniZrgLWKfsaFEapojvvlqcg8cIaAjnKf4JEa7LBtSZgI6q3+pKrZk+BRqr9aCld\nxNLlv4wLWabi6DBrLu+zs09vYKB+2USG8wlK1sECgYEA8sG1rmkq6kNVbd5oSJ++\nSoqeMRnb/p8LTDGBuc9ntomqJ4B8Sc6JC6/A1f7jpvH1YcfYHSm+ECehHhxC7JfA\nkJPTLtHF/wpQNylaxbwCLllyg8n7fVnrSwJXDuZyczO+XF2QP/Ni6WDPiarDeVPF\n+zXpt/M3oEHS6Bq9EVHS1RUCgYAjAsLSQ+skHJipiDYrBfF835mz4Ou3UIjZC5nK\ncI8yH8KTSvJHw4AALAlN8M381dIfccYeOs0U743Hiy92RR8SUK4YePYfz9Wkq4H5\nWniJCs40KTPqYMx3AGdY8IJ35RhMYQbdWIUKzYBFhczunIvJPpKoK8JPj61tI5DU\nRp6fgQKBgQClAX0rMilvfb7Zi9nrHPc862VndUrepClRw/x/BewqppshWII8qyfv\nnc4tbbeURr/W88zUWZ5fTGYf972UJqOQ5CI0XJFIYr8V7NnNmz9UdCixLgPQQidC\n7JJY4Y72PjbCwA9DJUNwhyxX2pdFjjJqvGrSukP12cTx0WLiIpDFXw==\n-----END RSA PRIVATE KEY-----   Putty key   Create file  server.ppk  with info about Putty Key: PuTTY-User-Key-File-2: ssh-rsa\nEncryption: none\nComment: imported-openssh-key\nPublic-Lines: 6\nAAAAB3NzaC1yc2EAAAADAQABAAABAQDQZNEsRDbnBy52hr40po4bd0pX3nlmGN4j\n9iFTUgUpzt84zXqShdNY+1UTwPT1VWSN9bGBBq8/x6pyhwgRbE23e5J4XOfTO9R9\nMvU95eXH0jerA4Gb82p0Z2Ev/w1DgvUs9Dk1jGfCUgzPRLvogwPBIGX015W/6zA8\nR6MSFswjn/3IRo4yu3CcAME7vc2/Edrz++H0XnhjA0TWtXXKSyavMvKAFLT7rPYl\n5+qibrNKB1Q42U3vsl08/MtlfNa3ueU0Bw0eXKaJdZYNjaxCX+ZTs/qvsVCCO/1K\nIVxrzOsyVP+ua6tkBA+aSIRl5d8dmDmqgwv8Iuv/AsE3Inik5E6T\nPrivate-Lines: 14\nAAABACSLmZceu1YWj1Jf3NlU4BT2/YWdUULTV5mM31lCR/+F9OV8O2OYrnCrWscl\nDpA7km/Gx4MuDeusczq0bXjIunRT6mLLQChuFJyEJDffqkU5m2OVMNSNgny5aHTH\nUKcnPyHMDoBSiBuu0epDToS+/RiQOvEOIYfPkdzwXyub7d7NLbEWKOThpLecn6Eu\nbH8FhJihUTgzy0Xb3kHQ/sIIZToaqVI6iAuIBL1t+UNuwBTQsItUsxjFQZMeqCjm\ngLmZy95ggLlbpQhZJJmxFk4bQcMKGfkhJUy3iwZ4ZGxLbpSPjiS5IGs1QyzuII6/\n93UKSgYQUkUHtAdog4Qu/x7Nv4EAAACBAPkbsyKzNmhbAVwSdpiwE4m9cpUxTLLR\njOhxH+FIwiiFuQYo0hS+IzPdIQtPglH4Vlb4k3b8C2xq8vKX7Bb4hmULjR0xZQnv\nHRlMm66sP5EHuT+yAoO8yjP8xP5Qgo1L7uidXzivazIMNIkxRIkuIkJ5icaiuRbk\ny7K9plcrii5TAAAAgQDWKMJUjfa62DYNHWHmMnntMpLKx3UJzXG5qrfvzum/RSp1\n+hykVmUch8DGqDY7D7KEqCfCeJmuAtYp+xoURqmiO++WpyDxwhoCOcp/gkRrssG1\nJmAjqrf6kqtmT4FGqv1oKV3E0uW/jAtZpuLoMGsu77OzT29goH7ZRIbzCUrWwQAA\nAIEApQF9KzIpb32+2YvZ6xz3POtlZ3VK3qQpUcP8fwXsKqabIViCPKsn753OLW23\nlEa/1vPM1FmeX0xmH/e9lCajkOQiNFyRSGK/FezZzZs/VHQosS4D0EInQuySWOGO\n9j42wsAPQyVDcIcsV9qXRY4yarxq0rpD9dnE8dFi4iKQxV8=\nPrivate-MAC: d619c293fe0ac660bff38d6c8db7d73736a51826", 
            "title": "Info server"
        }, 
        {
            "location": "/ubuntu/ssl/", 
            "text": "Overview\n\n\nThis is our developer docs about Setup SSL for Magento site after install. Our docs includes:\n\n\n\n\nCreate SSL\n\n\nScript generate certificate SSL for site\n\n\nSetup SSL for Magento site", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/ssl/#overview", 
            "text": "This is our developer docs about Setup SSL for Magento site after install. Our docs includes:   Create SSL  Script generate certificate SSL for site  Setup SSL for Magento site", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_create/", 
            "text": "New SSL style\n\n\nCreate ROOT CA\n\n\nopenssl genrsa -des3 -out rootCA.key \n2048\n\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days \n3658\n -out rootCA.pem\n\n\n\n\nCreate SSL\n\n\nCreate file \nv3.ext\n\n\nauthorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = x.o\nDNS.2 = *.x.o      \nDNS.3 = localhost\nDNS.4 = localhost.com\nDNS.5 = *.localhost.com\nIP.1 = 127.0.0.1\nIP.2 = 192.168.1.5\n\n\n\n\nopenssl req -new -nodes -out server.csr -newkey rsa:2048 -keyout server.key\nopenssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days \n3658\n -sha256 -extfile v3.ext\n\n\n\n\nAdd Trusted Certificate\n\n\nInstall Root Cert\n\n\nOR\n\n\nsudo apt-get install libnss3-tools\n\n[\n -d ~/.pki/nssdb \n]\n \n||\n mkdir -p ~/.pki/nssdb\ncertutil -d sql:\n$HOME\n/.pki/nssdb -A -n \nrootCA\n -i rootCA.pem -t TCP,TCP,TCP", 
            "title": "Create SSL"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_create/#new-ssl-style", 
            "text": "", 
            "title": "New SSL style"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_create/#create-root-ca", 
            "text": "openssl genrsa -des3 -out rootCA.key  2048 \nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days  3658  -out rootCA.pem", 
            "title": "Create ROOT CA"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_create/#create-ssl", 
            "text": "Create file  v3.ext  authorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = x.o\nDNS.2 = *.x.o      \nDNS.3 = localhost\nDNS.4 = localhost.com\nDNS.5 = *.localhost.com\nIP.1 = 127.0.0.1\nIP.2 = 192.168.1.5  openssl req -new -nodes -out server.csr -newkey rsa:2048 -keyout server.key\nopenssl x509 -req -in server.csr -CA rootCA.pem -CAkey rootCA.key -CAcreateserial -out server.crt -days  3658  -sha256 -extfile v3.ext", 
            "title": "Create SSL"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_create/#add-trusted-certificate", 
            "text": "Install Root Cert  OR  sudo apt-get install libnss3-tools [  -d ~/.pki/nssdb  ]   ||  mkdir -p ~/.pki/nssdb\ncertutil -d sql: $HOME /.pki/nssdb -A -n  rootCA  -i rootCA.pem -t TCP,TCP,TCP", 
            "title": "Add Trusted Certificate"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_magento_setup/", 
            "text": "Overview\n\n\nSetup SSL for Magento site after install\n\n\nCreate site available for apache2\n\n\n\n\nCopy ssl to apache2\n\nsudo cp server.crt /etc/ssl/certs/ssl-cert-snakeoil.pem\nsudo cp server.key /etc/ssl/private/ssl-cert-snakeoil.key\n\n\n\nCreate file /etc/apache2/sites-available/m223.conf\n\nVirtualHost *:80\n\n    ServerName m223.com\n    ServerAlias www.m223.com\n    ServerAlias *.m223.com\n    ServerAdmin magento@localhost\n    DocumentRoot /var/www/html/ce223\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n    \nDirectory \n/var/www/html/ce223\n\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n    \n/Directory\n\n\n\n/VirtualHost\n\n\n\nVirtualHost _default_:443\n\n    ServerAdmin admin@example.com\n    ServerName m223.com\n    ServerAlias www.m223.com\n    ServerAlias *.m223.com\n    ServerAdmin magento@localhost\n    DocumentRoot /var/www/html/ce223\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n    SSLEngine on\n    SSLCertificateFile  /etc/ssl/certs/ssl-cert-snakeoil.pem\n    SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key\n    \nDirectory \n/var/www/html/ce223\n\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n    \n/Directory\n\n\n/VirtualHost\n\n\n\n\nsudo a2ensite m223.conf\nsudo service apache2 reload\n\n\n\n\n\nNote\n\n\n\n\nView website \nhttps://magenticians.com/magento-ssl-configuration-issues-resolved/\n to setup in mysql\n\n\nMysql: In database in table 'core_config_data' set web/secure/use_in_frontend and web/secure/use_in_adminhtml = 1\n\n\n\n\n\n\nFlush cache magento after ensite apache, Clear cache of browser.\n\n\nClear the cache in both the cases by deleting /var/cache\n\n\n\n\n\n\n\n\nError cannot call Rest API Magento\n\n\nUncomment 2 line in file .htaccess in server magento: \n\n\nEx: /var/www/html/ce223/.htaccess\n\nOptions -MultiViews\nRewriteRule ^api/rest api.php?type=rest [QSA,L]", 
            "title": "SSL for Magento site"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_magento_setup/#overview", 
            "text": "Setup SSL for Magento site after install", 
            "title": "Overview"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_magento_setup/#create-site-available-for-apache2", 
            "text": "Copy ssl to apache2 sudo cp server.crt /etc/ssl/certs/ssl-cert-snakeoil.pem\nsudo cp server.key /etc/ssl/private/ssl-cert-snakeoil.key  Create file /etc/apache2/sites-available/m223.conf VirtualHost *:80 \n    ServerName m223.com\n    ServerAlias www.m223.com\n    ServerAlias *.m223.com\n    ServerAdmin magento@localhost\n    DocumentRoot /var/www/html/ce223\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n     Directory  /var/www/html/ce223 \n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n     /Directory  /VirtualHost  VirtualHost _default_:443 \n    ServerAdmin admin@example.com\n    ServerName m223.com\n    ServerAlias www.m223.com\n    ServerAlias *.m223.com\n    ServerAdmin magento@localhost\n    DocumentRoot /var/www/html/ce223\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n    SSLEngine on\n    SSLCertificateFile  /etc/ssl/certs/ssl-cert-snakeoil.pem\n    SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key\n     Directory  /var/www/html/ce223 \n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n     /Directory  /VirtualHost   sudo a2ensite m223.conf\nsudo service apache2 reload", 
            "title": "Create site available for apache2"
        }, 
        {
            "location": "/ubuntu/ssl/ssl_magento_setup/#note", 
            "text": "View website  https://magenticians.com/magento-ssl-configuration-issues-resolved/  to setup in mysql  Mysql: In database in table 'core_config_data' set web/secure/use_in_frontend and web/secure/use_in_adminhtml = 1    Flush cache magento after ensite apache, Clear cache of browser.  Clear the cache in both the cases by deleting /var/cache     Error cannot call Rest API Magento  Uncomment 2 line in file .htaccess in server magento:   Ex: /var/www/html/ce223/.htaccess Options -MultiViews\nRewriteRule ^api/rest api.php?type=rest [QSA,L]", 
            "title": "Note"
        }, 
        {
            "location": "/ubuntu/note/", 
            "text": "Note about Ubuntu\n\n\n\n\n\n\nSome libs for Ubuntu\n\n\nExample:\n\n\n\n\nScript create certificate SSL for site", 
            "title": "Note"
        }, 
        {
            "location": "/ubuntu/note/#note-about-ubuntu", 
            "text": "Some libs for Ubuntu  Example:   Script create certificate SSL for site", 
            "title": "Note about Ubuntu"
        }, 
        {
            "location": "/git/", 
            "text": "Overview\n\n\nThis is our developer docs about Git. Our docs includes:\n\n\n\n\nGit Internals\n\n\nNote", 
            "title": "Overview"
        }, 
        {
            "location": "/git/#overview", 
            "text": "This is our developer docs about Git. Our docs includes:   Git Internals  Note", 
            "title": "Overview"
        }, 
        {
            "location": "/git/internals/", 
            "text": "Overview\n\n\nThis is our developer docs about \nGit Internals\n\n\nGit Objects\n\n\n\n\nDocuments:\n\n\nhttps://hackernoon.com/https-medium-com-zspajich-understanding-git-data-model-95eb16cc99f5\n\n\nhttps://git-scm.com/book/id/v2/Git-Internals-Git-Objects\n\n\n\n\n\n\n\n\nPackfiles\n\n\n\n\nDocuments:\n\n\nhttps://git-scm.com/book/id/v2/Git-Internals-Packfiles", 
            "title": "Git Internals"
        }, 
        {
            "location": "/git/internals/#overview", 
            "text": "This is our developer docs about  Git Internals", 
            "title": "Overview"
        }, 
        {
            "location": "/git/internals/#git-objects", 
            "text": "Documents:  https://hackernoon.com/https-medium-com-zspajich-understanding-git-data-model-95eb16cc99f5  https://git-scm.com/book/id/v2/Git-Internals-Git-Objects", 
            "title": "Git Objects"
        }, 
        {
            "location": "/git/internals/#packfiles", 
            "text": "Documents:  https://git-scm.com/book/id/v2/Git-Internals-Packfiles", 
            "title": "Packfiles"
        }, 
        {
            "location": "/git/note/", 
            "text": "Note about Git\n\n\nGithub\n\n\nUse Github Personal access token\n\n\n\n\nCreate and use token\n\n\nUse token to commit: \n    \nrepo-url=https://[username]:[token]@github.com/[username]/[repository_name].git\n\n\n    \ngit remote set-url origin \n[\nrepo-url\n]\n\n\n\n\nNote:\n\n\nIf token exist in any file when commit, GitHub can observe, remove token and then notice to email that \"This token removed\".\n\n\nShould keep token in env and add it to remote.", 
            "title": "Note"
        }, 
        {
            "location": "/git/note/#note-about-git", 
            "text": "", 
            "title": "Note about Git"
        }, 
        {
            "location": "/git/note/#github", 
            "text": "", 
            "title": "Github"
        }, 
        {
            "location": "/git/note/#use-github-personal-access-token", 
            "text": "Create and use token  Use token to commit: \n     repo-url=https://[username]:[token]@github.com/[username]/[repository_name].git \n     git remote set-url origin  [ repo-url ]   Note:  If token exist in any file when commit, GitHub can observe, remove token and then notice to email that \"This token removed\".  Should keep token in env and add it to remote.", 
            "title": "Use Github Personal access token"
        }, 
        {
            "location": "/magento/", 
            "text": "Overview\n\n\nThis is our developer docs about Magento. Our docs includes:\n\n\n\n\nInstall\n\n\nCommand line\n\n\nMagento Functional Testing Framework\n\n\nFunctional Testing\n\n\n\n\n\n\nInstall extension Magento by composer\n\n\nNote about Magento", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/#overview", 
            "text": "This is our developer docs about Magento. Our docs includes:   Install  Command line  Magento Functional Testing Framework  Functional Testing    Install extension Magento by composer  Note about Magento", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/install/", 
            "text": "Overview\n\n\nThis is our developer docs about \nHow to install magento\n:\n\n\nPackage\n\n\n\n\nMagento CE: \nhttp://pubfiles.nexcess.net/magento/ce-packages/\n\n\nMagento EE: \nhttps://drive.google.com/drive/u/1/folders/0B4o2mdOYLZI6bVNETzU0M0RBdFU\n\n\n\n\nInstall Magento\n\n\nInstall Apache2, Mysql on Ubuntu 16.04: \nhttps://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04\n\n\n\n\nInstall Lamp server: \n\nsudo apt-get install lamp-server^\n\n\n\nApache install and setup:\n\nsudo apt-get update\nsudo apt-get install apache2\n\n\n\nAdjust the Firewall to Allow Web Traffic:\n\nsudo ufw app list\nsudo ufw allow in \nApache Full\n\n\n\n\nInstall MySQL:\n\nsudo apt-get install mysql-server\n\n\n\nInstall PHP:\n\nsudo apt-get install php libapache2-mod-php php-mcrypt php-mysql\n\n\n\nsudo nano /etc/apache2/mods-enabled/dir.conf\n\n\nChange \ndir.conf\n to \n\nIfModule mod_dir.c\n\n    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm\n\n/IfModule\n\n\n\nRestart Apache2\n\nsudo systemctl restart apache2\n\n\n\nApache setup\n\n\n\n\nCreate file \nmagento.conf\n\n\nsudo nano /etc/apache2/sites-available/magento.conf\n\n\nwith text:\n\nVirtualHost *:80\n\n    DocumentRoot /var/www/html\n    \nDirectory /var/www/html/\n\n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n    \n/Directory\n\n\n/VirtualHost\n\n\n\n\nsudo a2ensite magento.conf\nsudo a2dissite \n000\n-default.conf\nsudo service apache2 reload\n\n\n- PHP setup\n\nsudo nano /etc/php/7.0/apache2/php.ini\n\n\nFind and update info:\n\nmax_execution_time=300\nmax_input_time=600\npost_max_size=80M\nmax_file_uploads=200\nmemory_limit=2048M\n\n\nInstall extension PHP:\n\nsudo apt-get install php-mcrypt php-curl php-gd libcurl3 php-intl php-xsl\n\n\nRun command:\n\nsudo a2enmod rewrite\nsudo phpenmod mcrypt\nsudo service apache2 restart\n\n\n\n\n\nCreate database:\n\nmysql -u root -p\nCREATE DATABASE magento\n;\n\n\n\n\nConfig auth magento\n\nhttps://devdocs.magento.com/guides/v2.0/install-gde/prereq/connect-auth.html\n Create file auth.json with content below:\n\nnano ~/.composer/auth.json\n\n\n\n{\n    \nhttp-basic\n: {\n        \nrepo.magento.com\n: {\n            \nusername\n: \na3380186b4ffb670466a01331a3fb375\n,\n            \npassword\n: \ncfe4874a50552827da901971d249322a\n\n        }\n    }\n}\n\n\n\nDownload package Magento and create folder in apache \n\nmkdir /var/www/html/magento\n\n\ncopy it to \n/var/www/html/magento\n. Then open link in browser \nhttp://127.0.0.1/magento/setup\n to setup magento.\n\n\n\n\nInstall extension\n\n\nMagento 1\n\n\n\n\nCopy extension to magento root folder.\n\n\nFlush cache in backend or remove folder \"var/cache\"\n\n\n\n\nMagento 2\n\n\n\n\nCopy extension to magento root folder.\n\n\nRun commands:\n\ncd\n /var/www/html/magento\nphp bin/magento setup:di:compile\nphp bin/magento setup:upgrade\nphp bin/magento setup:static-content:deploy\nphp bin/magento deploy:mode:set developer\nphp bin/magento cache:flush\nsudo chmod -R \n777\n ./\n\n\n\n\n\nReinstall\n\n\nAfter install magento want reinstall magento\n\n\nMagento 1:\n\n\n\n\nComment all info in file \"app/etc/local.xml\".\n\n\nEnter link \nhttp://127.0.0.1/magento\n in browser auto run setup again.\n\n\nNote: If not want reinstall after comment file \"local.xml\" then need uncomment file \"local.xml\" and then remove all file in \"var/cache\" by command line\n\nrm -rf /var/www/html/magento/var/cache\n\n\n\n\n\nMagento 2\n\n\n\n\nComment all info in file \"app/etc/env.php\".\n\n\nEnter link \nhttp://127.0.0.1/magento/setup\n in browser auto run setup again.", 
            "title": "Installation"
        }, 
        {
            "location": "/magento/install/#overview", 
            "text": "This is our developer docs about  How to install magento :", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/install/#package", 
            "text": "Magento CE:  http://pubfiles.nexcess.net/magento/ce-packages/  Magento EE:  https://drive.google.com/drive/u/1/folders/0B4o2mdOYLZI6bVNETzU0M0RBdFU", 
            "title": "Package"
        }, 
        {
            "location": "/magento/install/#install-magento", 
            "text": "Install Apache2, Mysql on Ubuntu 16.04:  https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04   Install Lamp server:  sudo apt-get install lamp-server^  Apache install and setup: sudo apt-get update\nsudo apt-get install apache2  Adjust the Firewall to Allow Web Traffic: sudo ufw app list\nsudo ufw allow in  Apache Full   Install MySQL: sudo apt-get install mysql-server  Install PHP: sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql  sudo nano /etc/apache2/mods-enabled/dir.conf \nChange  dir.conf  to  IfModule mod_dir.c \n    DirectoryIndex index.php index.html index.cgi index.pl index.xhtml index.htm /IfModule  \nRestart Apache2 sudo systemctl restart apache2  Apache setup   Create file  magento.conf  sudo nano /etc/apache2/sites-available/magento.conf \nwith text: VirtualHost *:80 \n    DocumentRoot /var/www/html\n     Directory /var/www/html/ \n        Options Indexes FollowSymLinks MultiViews\n        AllowOverride All\n     /Directory  /VirtualHost   sudo a2ensite magento.conf\nsudo a2dissite  000 -default.conf\nsudo service apache2 reload \n- PHP setup sudo nano /etc/php/7.0/apache2/php.ini \nFind and update info: max_execution_time=300\nmax_input_time=600\npost_max_size=80M\nmax_file_uploads=200\nmemory_limit=2048M \nInstall extension PHP: sudo apt-get install php-mcrypt php-curl php-gd libcurl3 php-intl php-xsl \nRun command: sudo a2enmod rewrite\nsudo phpenmod mcrypt\nsudo service apache2 restart   Create database: mysql -u root -p\nCREATE DATABASE magento ;   Config auth magento https://devdocs.magento.com/guides/v2.0/install-gde/prereq/connect-auth.html  Create file auth.json with content below: nano ~/.composer/auth.json  {\n     http-basic : {\n         repo.magento.com : {\n             username :  a3380186b4ffb670466a01331a3fb375 ,\n             password :  cfe4874a50552827da901971d249322a \n        }\n    }\n}  Download package Magento and create folder in apache  mkdir /var/www/html/magento \ncopy it to  /var/www/html/magento . Then open link in browser  http://127.0.0.1/magento/setup  to setup magento.", 
            "title": "Install Magento"
        }, 
        {
            "location": "/magento/install/#install-extension", 
            "text": "", 
            "title": "Install extension"
        }, 
        {
            "location": "/magento/install/#magento-1", 
            "text": "Copy extension to magento root folder.  Flush cache in backend or remove folder \"var/cache\"", 
            "title": "Magento 1"
        }, 
        {
            "location": "/magento/install/#magento-2", 
            "text": "Copy extension to magento root folder.  Run commands: cd  /var/www/html/magento\nphp bin/magento setup:di:compile\nphp bin/magento setup:upgrade\nphp bin/magento setup:static-content:deploy\nphp bin/magento deploy:mode:set developer\nphp bin/magento cache:flush\nsudo chmod -R  777  ./", 
            "title": "Magento 2"
        }, 
        {
            "location": "/magento/install/#reinstall", 
            "text": "After install magento want reinstall magento", 
            "title": "Reinstall"
        }, 
        {
            "location": "/magento/install/#magento-1_1", 
            "text": "Comment all info in file \"app/etc/local.xml\".  Enter link  http://127.0.0.1/magento  in browser auto run setup again.  Note: If not want reinstall after comment file \"local.xml\" then need uncomment file \"local.xml\" and then remove all file in \"var/cache\" by command line rm -rf /var/www/html/magento/var/cache", 
            "title": "Magento 1:"
        }, 
        {
            "location": "/magento/install/#magento-2_1", 
            "text": "Comment all info in file \"app/etc/env.php\".  Enter link  http://127.0.0.1/magento/setup  in browser auto run setup again.", 
            "title": "Magento 2"
        }, 
        {
            "location": "/magento/command/", 
            "text": "Overview\n\n\nThis is our developer docs about \nCommand line Magento\n:\n\n\nCommand summary\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmagento setup:cache:{enable\n\n\ndisable\n\n\n\n\n\n\nmagento setup:indexer:{status\n\n\nshow-mode\n\n\n\n\n\n\nmagento cron:run\n\n\nRuns Magento cron jobs\n\n\n\n\n\n\nmagento setup:di:compile-multi-tenant\n\n\nUse only if you have multiple independent Magento applications (in other words, one common Magento code base but more than one independent instance of the Magento application).Compiles all non-existent proxies and factories; and pre-compiles class definitions, inheritance information, and plugin definitions for multiple stores or websites.\n\n\n\n\n\n\nmagento setup:di:compile\n\n\nUse if you have one instance of the Magento application.Compiles all non-existent proxies and factories; and pre-compiles class definitions, inheritance information, and plugin definitions for one store and website.\n\n\n\n\n\n\nmagento info:dependencies:{show-modules\n\n\nshow-modules-circular\n\n\n\n\n\n\n\n\nCommands\n\n\nThe following sections discuss the available commands.\n\n\n\n\nManage the cache\n\n\nManage the indexers\n\n\nConfigure and run cron\n\n\nCode compiler\n\n\nSet the Magento mode\n\n\nURN highlighter\n\n\nDependency reports\n\n\nTranslation dictionaries and language packages\n\n\nDeploy static view files\n\n\nCreate symlinks to LESS files\n\n\nRun unit tests\n\n\nConvert layout XML files\n\n\nGenerate data for performance testing", 
            "title": "Command line"
        }, 
        {
            "location": "/magento/command/#overview", 
            "text": "This is our developer docs about  Command line Magento :", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/command/#command-summary", 
            "text": "Command  Description      magento setup:cache:{enable  disable    magento setup:indexer:{status  show-mode    magento cron:run  Runs Magento cron jobs    magento setup:di:compile-multi-tenant  Use only if you have multiple independent Magento applications (in other words, one common Magento code base but more than one independent instance of the Magento application).Compiles all non-existent proxies and factories; and pre-compiles class definitions, inheritance information, and plugin definitions for multiple stores or websites.    magento setup:di:compile  Use if you have one instance of the Magento application.Compiles all non-existent proxies and factories; and pre-compiles class definitions, inheritance information, and plugin definitions for one store and website.    magento info:dependencies:{show-modules  show-modules-circular", 
            "title": "Command summary"
        }, 
        {
            "location": "/magento/command/#commands", 
            "text": "The following sections discuss the available commands.   Manage the cache  Manage the indexers  Configure and run cron  Code compiler  Set the Magento mode  URN highlighter  Dependency reports  Translation dictionaries and language packages  Deploy static view files  Create symlinks to LESS files  Run unit tests  Convert layout XML files  Generate data for performance testing", 
            "title": "Commands"
        }, 
        {
            "location": "/magento/test/", 
            "text": "Overview\n\n\nThis is our developer docs about Magento Functional Testing Framework. Our docs includes:\n\n\n\n\nFunctional Testing Framework", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/test/#overview", 
            "text": "This is our developer docs about Magento Functional Testing Framework. Our docs includes:   Functional Testing Framework", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/test/functional/", 
            "text": "Overview\n\n\nThis is our developer docs about \nTesting Functional of Magento\n.\n\n\n\n\nInstallation\n\n\nTest Run\n\n\nCreate a Test - Theory\n\n\nCreate a Test - Practice\n\n\nFunctional Testing Framework Entities", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/test/functional/#overview", 
            "text": "This is our developer docs about  Testing Functional of Magento .   Installation  Test Run  Create a Test - Theory  Create a Test - Practice  Functional Testing Framework Entities", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/test/functional/install/", 
            "text": "Installation\n\n\n\n\nPrepare install\n\n\nDownload \nSelenium Standalone Server\n\n\nSELENIUM_STANDALONE_VERSION\n=\n3\n.4.0\nwget -N http://selenium-release.storage.googleapis.com/\n$SELENIUM_SUBDIR\n/selenium-server-standalone-\n$SELENIUM_STANDALONE_VERSION\n.jar -P ~/\nsudo mv -f ~/selenium-server-standalone-\n$SELENIUM_STANDALONE_VERSION\n.jar /usr/local/bin/selenium-server-standalone.jar\nsudo chmod \n777\n /usr/local/bin/selenium-server-standalone.jar\njava -jar /usr/local/bin/selenium-server-standalone.jar \n ~/selenium.log \n\n\n\n\nDownload Chrome driver\n\nCHROME_DRIVER_VERSION\n=\n`\ncurl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE\n`\n\nwget -N http://chromedriver.storage.googleapis.com/\n$CHROME_DRIVER_VERSION\n/chromedriver_linux64.zip -P ~/\nunzip ~/chromedriver_linux64.zip -d ~/\nrm ~/chromedriver_linux64.zip\nsudo mv -f ~/chromedriver /usr/local/bin/chromedriver\nsudo chmod \n777\n /usr/local/bin/chromedriver\n\n\n\n\n\n\n\nInstallation\n\ncd\n \nmagento2_root_dir\n/dev/tests/functional/\ncomposer install\n\n\n\nAdjust configuration\n\n\nEdit phpunit.xml to configure PHPUnit: \n/dev/tests/functional/phpunit.xml.dist\n    \napp_frontend_url\napp_backend_url\n\n\n\nEdit config.xml to configure Functional Testing Framework: \n/dev/tests/functional/etc/config.xml.dist\n    \napplication\n\n    \nreopenBrowser\ntestCase\n/reopenBrowser\n\n    \nbackendLogin\nadmin\n/backendLogin\n\n    \nbackendPassword\nadmin123\n/backendPassword\n\n    \nappBackendUrl\nhttp://127.0.0.1/ce223/admin/\n/appBackendUrl\n\n    \nbackendLoginUrl\nadmin/auth/login\n/backendLoginUrl\n\n\n/application\n\n\nisolation\n\n    \nresetUrlPath\ndev/tests/functional/isolation.php\n/resetUrlPath\n\n    \ntestSuite\nnone\n/testSuite\n\n    \ntestCase\nnone\n/testCase\n\n    \ntest\nnone\n/test\n\n\n/isolation\n\n\ninstall\n\n    \nhost\n127.0.0.1\n/host\n\n    \nuser\nroot\n/user\n\n    \npassword\nroot\n/password\n\n    \ndbName\nmagento_ce223\n/dbName\n\n    \nbaseUrl\nhttp://127.0.0.1/ce223/\n/baseUrl\n\n    \nbackendName\nadmin\n/backendName\n\n\n/install\n\n\nserver\n\n    \nitem\n \nname=\nselenium\n \ntype=\ndefault\n \nbrowser=\nGoogle Chrome\n \nbrowserName=\nchrome\n \nhost=\nlocalhost\n \nport=\n4444\n \nseleniumServerRequestsTimeout=\n15\n \nsessionStrategy=\nshared\n\n        \ndesiredCapabilities\n\n            \nplatform\nANY\n/platform\n\n        \n/desiredCapabilities\n\n    \n/item\n\n\n/server\n\n\n\n\n\n\n\n\nPrepare Magento application\n\n\nChange WYSIWYG settings\n\n\nLog in to the Magento Admin as an administrator.\n\n\nFollow Stores \n Configuration \n General \n Content Management \n WYSIWYG Options.\n\n\nSet Enable WYSIWYG Editor to Disabled Completely.\n\n\nClick Save Config.\n\n\n\n\n\n\nChange security settings\n\n\nFollow Stores \n Configuration \n Advanced \n Admin \n Security.\n\n\nSet Admin Account Sharing to Yes.\n\n\nSet Add Secret Key to URLs to No.\n\n\n\n\n\n\nRefresh page cache\n\n\nApache: Copy /dev/tests/functional/.htaccess.sample to /dev/tests/functional/.htaccess.\n\n\n\n\n\n\nRun generator\n\ncd\n \nmagento2_root_dir\n/dev/tests/functional/utils\nphp generate.php", 
            "title": "Installation"
        }, 
        {
            "location": "/magento/test/functional/install/#installation", 
            "text": "Prepare install  Download  Selenium Standalone Server  SELENIUM_STANDALONE_VERSION = 3 .4.0\nwget -N http://selenium-release.storage.googleapis.com/ $SELENIUM_SUBDIR /selenium-server-standalone- $SELENIUM_STANDALONE_VERSION .jar -P ~/\nsudo mv -f ~/selenium-server-standalone- $SELENIUM_STANDALONE_VERSION .jar /usr/local/bin/selenium-server-standalone.jar\nsudo chmod  777  /usr/local/bin/selenium-server-standalone.jar\njava -jar /usr/local/bin/selenium-server-standalone.jar   ~/selenium.log    Download Chrome driver CHROME_DRIVER_VERSION = ` curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE ` \nwget -N http://chromedriver.storage.googleapis.com/ $CHROME_DRIVER_VERSION /chromedriver_linux64.zip -P ~/\nunzip ~/chromedriver_linux64.zip -d ~/\nrm ~/chromedriver_linux64.zip\nsudo mv -f ~/chromedriver /usr/local/bin/chromedriver\nsudo chmod  777  /usr/local/bin/chromedriver    Installation cd   magento2_root_dir /dev/tests/functional/\ncomposer install  Adjust configuration  Edit phpunit.xml to configure PHPUnit:  /dev/tests/functional/phpunit.xml.dist\n     app_frontend_url\napp_backend_url  Edit config.xml to configure Functional Testing Framework:  /dev/tests/functional/etc/config.xml.dist\n     application \n     reopenBrowser testCase /reopenBrowser \n     backendLogin admin /backendLogin \n     backendPassword admin123 /backendPassword \n     appBackendUrl http://127.0.0.1/ce223/admin/ /appBackendUrl \n     backendLoginUrl admin/auth/login /backendLoginUrl  /application  isolation \n     resetUrlPath dev/tests/functional/isolation.php /resetUrlPath \n     testSuite none /testSuite \n     testCase none /testCase \n     test none /test  /isolation  install \n     host 127.0.0.1 /host \n     user root /user \n     password root /password \n     dbName magento_ce223 /dbName \n     baseUrl http://127.0.0.1/ce223/ /baseUrl \n     backendName admin /backendName  /install  server \n     item   name= selenium   type= default   browser= Google Chrome   browserName= chrome   host= localhost   port= 4444   seleniumServerRequestsTimeout= 15   sessionStrategy= shared \n         desiredCapabilities \n             platform ANY /platform \n         /desiredCapabilities \n     /item  /server     Prepare Magento application  Change WYSIWYG settings  Log in to the Magento Admin as an administrator.  Follow Stores   Configuration   General   Content Management   WYSIWYG Options.  Set Enable WYSIWYG Editor to Disabled Completely.  Click Save Config.    Change security settings  Follow Stores   Configuration   Advanced   Admin   Security.  Set Admin Account Sharing to Yes.  Set Add Secret Key to URLs to No.    Refresh page cache  Apache: Copy /dev/tests/functional/.htaccess.sample to /dev/tests/functional/.htaccess.    Run generator cd   magento2_root_dir /dev/tests/functional/utils\nphp generate.php", 
            "title": "Installation"
        }, 
        {
            "location": "/magento/test/functional/run/", 
            "text": "Test run\n\n\n\n\nRun all tests\n\ncd\n \nmagento2_root_dir\n/dev/tests/functional\nvendor/bin/phpunit\n\n\n\nRun particular test\n\ncd\n \nmagento2_root_dir\n/dev/tests/functional\nvendor/bin/phpunit --filter \nname of test", 
            "title": "Test Run"
        }, 
        {
            "location": "/magento/test/functional/run/#test-run", 
            "text": "Run all tests cd   magento2_root_dir /dev/tests/functional\nvendor/bin/phpunit  Run particular test cd   magento2_root_dir /dev/tests/functional\nvendor/bin/phpunit --filter  name of test", 
            "title": "Test run"
        }, 
        {
            "location": "/magento/test/functional/create_test_theory/", 
            "text": "Create a Test\n\n\nCreate a Test in Function Testing Framework. \nhttps://devdocs.magento.com/guides/v2.2/mtf/create_test.html\n\n\nCreate a functional test\n\n\nCreate new module \n/dev/tests/functional/tests/app/Magento/\n.\n\n\nTest object\n\n\nA test object is an object that you are going to test. Most of the test actions are performed under this object. The test object is represented by a \nfixture\n. The fixture defines properties of an object.\n\n\nTest data\n\n\nThere are two types of test data:\n- Data for the test, stored in a \ndata set\n.\n- Preconditions:\n    - Sample data that is stored in a \nfixture repository\n. In a data set, it is stored as a name of the fixture repository.\n    - A sample test entity that can be created by a \nhandler\n.\n\n\nTest flow\n\n\nA test flow is a set of test steps that you want to perform under the test object to check required functionality. Test steps are defined in a \ntest case\n. Usually, a test step contains a set of actions. Each action is managed by a method defined in a \nblock\n. A \npage\n is a container for blocks. It stores selectors to identify blocks on an HTML page.\n\n\nTest assertions\n\n\nA test assertion compares the test flow results with the expected ones. Test assertions are represented by \nconstraints\n.", 
            "title": "Create a Test - Theory"
        }, 
        {
            "location": "/magento/test/functional/create_test_theory/#create-a-test", 
            "text": "Create a Test in Function Testing Framework.  https://devdocs.magento.com/guides/v2.2/mtf/create_test.html", 
            "title": "Create a Test"
        }, 
        {
            "location": "/magento/test/functional/create_test_theory/#create-a-functional-test", 
            "text": "Create new module  /dev/tests/functional/tests/app/Magento/ .", 
            "title": "Create a functional test"
        }, 
        {
            "location": "/magento/test/functional/create_test_theory/#test-object", 
            "text": "A test object is an object that you are going to test. Most of the test actions are performed under this object. The test object is represented by a  fixture . The fixture defines properties of an object.", 
            "title": "Test object"
        }, 
        {
            "location": "/magento/test/functional/create_test_theory/#test-data", 
            "text": "There are two types of test data:\n- Data for the test, stored in a  data set .\n- Preconditions:\n    - Sample data that is stored in a  fixture repository . In a data set, it is stored as a name of the fixture repository.\n    - A sample test entity that can be created by a  handler .", 
            "title": "Test data"
        }, 
        {
            "location": "/magento/test/functional/create_test_theory/#test-flow", 
            "text": "A test flow is a set of test steps that you want to perform under the test object to check required functionality. Test steps are defined in a  test case . Usually, a test step contains a set of actions. Each action is managed by a method defined in a  block . A  page  is a container for blocks. It stores selectors to identify blocks on an HTML page.", 
            "title": "Test flow"
        }, 
        {
            "location": "/magento/test/functional/create_test_theory/#test-assertions", 
            "text": "A test assertion compares the test flow results with the expected ones. Test assertions are represented by  constraints .", 
            "title": "Test assertions"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/", 
            "text": "Test creation\n\n\nCreate the testing object - a fixture\n\n\nUse a generateFixtureXml.php to create a new fixture.\n\ncd\n \nmagento2_root_dir\n/dev/tests/functional/utils\nphp -f generateFixtureXml.php -- --name synonym --entity_type search_synonyms --collection Magento\n\\\\\nSearch\n\\\\\nModel\n\\\\\nResourceModel\n\\\\\nQuery\n\\\\\nCollection\n\n\n\n\n\n\n\n\n\nParameter\n\n\nValue\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\n--name\n\n\nsynonym\n\n\nA name of the fixture. It can have any name. synonym seems to be logical.\n\n\n\n\n\n\n--entity_type\n\n\nsearch_synonyms\n\n\nDatabase table name where entity data is stored. You can track database input when you perform a manual testing. A new record will be created in a table that you need.\n\n\n\n\n\n\n--collection\n\n\nMagento\\Search\\Model\\ResourceModel\\Query\\Collection\n\n\nCollection to generate data sets. Synonyms are the entities of a Magento_Search module. A collection can always be found in model resources.\n\n\n\n\n\n\n\n\nAs a result of previous commands, a brand new fixture can be found in the \n/dev/tests/functional/tests/app/Magento/Search/Test/Fixture directory.\n\n\nhttps://devdocs.magento.com/guides/v2.2/mtf/create_test/create_new_test.html\n\n\nNow we should change the fixture. Instead of store_id and website_id, we must use scope_id with the Magento\\Search\\Test\\Fixture\\Synonym\\ScopeId data source class.\n\n\nCreate the initial test case\n\n\nFrom the test case topic we know about the structure, location and name of the test case. In this example it is named CreateSynonymEntityTest.php and stored in \n/dev/tests/functional/tests/app/Magento/Search/Test/TestCase.\nWe can code the initialization of these pages in the test using an __inject() method of the Magento\\Mtf\\TestCase\\Injectable class. The pages will be created in Step 5. Also, we will use the fixture from the Step 2.\n\n?php\n\n\n\nnamespace\n \nMagento\\Search\\Test\\TestCase\n;\n\n\n\nuse\n \nMagento\\Mtf\\TestCase\\Injectable\n;\n\n\nuse\n \nMagento\\Search\\Test\\Fixture\\Synonym\n;\n\n\n\n/**\n\n\n * Steps:\n\n\n * 1. Log in to Admin.\n\n\n * 2. Open the Search Synonym page.\n\n\n * 3. Click the \nNew Synonym Group\n button.\n\n\n * 4. Enter data according to a data set. For each variation, the synonyms must have unique identifiers.\n\n\n * 5. Click the \nSave Synonym Group\n button.\n\n\n * 6. Verify the synonym group saved successfully.\n\n\n */\n\n\nclass\n \nCreateSynonymEntityTest\n \nextends\n \nInjectable\n\n\n{\n\n    \n/**\n\n\n     * Search Synonyms Index page.\n\n\n     *\n\n\n     * @var SynonymsIndex\n\n\n     */\n\n    \nprivate\n \n$synonymsIndex\n;\n\n\n    \n/**\n\n\n     * New Synonym Group page.\n\n\n     *\n\n\n     * @var SynonymsNew\n\n\n     */\n\n    \nprivate\n \n$synonymsNew\n;\n\n\n    \n/**\n\n\n     * Inject synonym pages.\n\n\n     *\n\n\n     * @param SynonymsIndex $synonymsIndex\n\n\n     * @param SynonymsNew $synonymsNew\n\n\n     * @return void\n\n\n     */\n\n    \npublic\n \nfunction\n \n__inject\n(\n\n        \nSynonymsIndex\n \n$synonymsIndex\n,\n\n        \nSynonymsNew\n \n$synonymsNew\n\n    \n)\n \n{\n\n        \n$this\n-\nsynonymsIndex\n \n=\n \n$synonymsIndex\n;\n\n        \n$this\n-\nsynonymsNew\n \n=\n \n$synonymsNew\n;\n\n    \n}\n\n\n    \n/**\n\n\n     * Create Synonym group test.\n\n\n     *\n\n\n     * @param Synonym $synonym\n\n\n     * @return void\n\n\n     */\n\n    \npublic\n \nfunction\n \ntest\n(\nSynonym\n \n$synonym\n)\n\n    \n{\n\n        \n// Steps\n\n    \n}\n\n\n}\n\n\n\n\nCreate the data set\n\n\nNow we can add a data set with variations that cover cases in the test description: \n/dev/tests/functional/tests/app/Magento/Search/Test/TestCase/CreateSynonymEntityTest.xml\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nconfig\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n \nxsi:noNamespaceSchemaLocation=\n../../../../../../vendor/magento/mtf/etc/variations.xsd\n\n    \ntestCase\n \nname=\nMagento\\Search\\Test\\TestCase\\CreateSynonymEntityTest\n \nsummary=\nCreate Synonyms\n \nticketId=\nMAGETWO-23022016\n\n        \nvariation\n \nname=\nCreateCategoryEntityTestVariation1_all_websites_all_store_views\n \nsummary=\nCreate synonym for all websites and all store views\n\n            \ndata\n \nname=\nsynonym/data/synonyms\n \nxsi:type=\nstring\nshoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation%\n/data\n\n        \n/variation\n\n        \nvariation\n \nname=\nCreateCategoryEntityTestVariation2_main_website_all_store_views\n \nsummary=\nCreate synonyms for main website and all store views\n\n            \ndata\n \nname=\nsynonym/data/synonyms\n \nxsi:type=\nstring\nshoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation%\n/data\n\n            \ndata\n \nname=\nsynonym/data/scope_id/dataset\n \nxsi:type=\nstring\nall_store_views\n/data\n\n        \n/variation\n\n        \nvariation\n \nname=\nCreateCategoryEntityTestVariation3_main_website_default_store_view\n \nsummary=\nCreate synonyms for main website and default store views\n\n            \ndata\n \nname=\nsynonym/data/synonyms\n \nxsi:type=\nstring\nshoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation%\n/data\n\n            \ndata\n \nname=\nsynonym/data/scope_id/dataset\n \nxsi:type=\nstring\ndefault_store_view\n/data\n\n        \n/variation\n\n    \n/testCase\n\n\n/config\n\n\n\n\nCreate the pages\n\n\nIn Step 3, we added two pages to the test case class. Because both pages are in the Admin area, we should create them in the \n/dev/tests/functional/tests/app/Magento/Search/Test/Page/Adminhtml directory.\n\n\nSynonymsIndex.xml\n\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nconfig\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n \nxsi:noNamespaceSchemaLocation=\n../../../../../../../vendor/magento/mtf/etc/pages.xsd\n\n    \npage\n \nname=\nSynonymsIndex\n \narea=\nAdminhtml\n \nmca=\nsearch/synonyms/index\n \nmodule=\nMagento_Search\n\n        \nblock\n \n...\n \n/\n\n    \n/page\n\n\n/config\n\n\n\nTo generate PHP classes for these pages enter and run in your terminal\n\nphp \nmagento2_root_dir\n/dev/tests/functional/utils/generate.php\n\n\n\nCreate the blocks\n\n\nHow to code \u2018Click the \u201cNew Synonym Group\u201d button\u2019\n\nFortunately, you already have a block that contains a method to add a new entity in a grid: \\Magento\\Backend\\Test\\Block\\GridPageActions.\n\n?php\n\n\n/**\n\n\n * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.\n\n\n * See COPYING.txt for license details.\n\n\n */\n\n\nnamespace\n \nMagento\\Backend\\Test\\Block\n;\n\n\n/**\n\n\n * Class GridPageActions\n\n\n * Grid page actions block\n\n\n */\n\n\nclass\n \nGridPageActions\n \nextends\n \nPageActions\n\n\n{\n\n    \n/**\n\n\n     * \nAdd New\n button\n\n\n     *\n\n\n     * @var string\n\n\n     */\n\n    \nprotected\n \n$addNewButton\n \n=\n \n#add\n;\n\n    \n/**\n\n\n     * \nCreate Store\n button selector\n\n\n     *\n\n\n     * @var string\n\n\n     */\n\n    \nprotected\n \n$createStoreButton\n \n=\n \n#add_group\n;\n\n    \n/**\n\n\n     * Click on \nAdd New\n button\n\n\n     *\n\n\n     * @return void\n\n\n     */\n\n    \npublic\n \nfunction\n \naddNew\n()\n\n    \n{\n\n        \n$this\n-\n_rootElement\n-\nfind\n(\n$this\n-\naddNewButton\n)\n-\nclick\n();\n\n    \n}\n\n    \n/**\n\n\n     * Click on \nCreate Store\n button\n\n\n     *\n\n\n     * @return void\n\n\n     */\n\n    \npublic\n \nfunction\n \ncreateStoreGroup\n()\n\n    \n{\n\n        \n$this\n-\n_rootElement\n-\nfind\n(\n$this\n-\ncreateStoreButton\n)\n-\nclick\n();\n\n    \n}\n\n\n}\n\n\n\nIn HTML page, to locate the UI block that contains a button, we will use a .page-main-actions locator. Learn how to define a locator.\n\n\nThe SynonymsIndex.xml page must contain the following block to be able to run the method in a test case.\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nconfig\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n \nxsi:noNamespaceSchemaLocation=\n../../../../../../../vendor/magento/mtf/etc/pages.xsd\n\n    \npage\n \nname=\nSynonymsIndex\n \narea=\nAdminhtml\n \nmca=\nsearch/synonyms/index\n \nmodule=\nMagento_Search\n\n        \nblock\n \nname=\npageActionsBlock\n \nclass=\nMagento\\Backend\\Test\\Block\\GridPageActions\n \nlocator=\n.page-main-actions\n \nstrategy=\ncss selector\n/\n\n    \n/page\n\n\n/config\n\n\n\n\nForm mapping\n\n\nLearn about form mapping..\n\n\nAdd the blocks to pages\n\n\nTo associate methods with pages, blocks must be added to pages.\n\n\nSearch Synonym page\n\n\nA corresponding page object in a functional test is \n/dev/tests/functional/tests/app/Magento/Search/Test/Page/Adminhtml/SynonymsIndex.xml\n\n\nThe page with a block:\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nconfig\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n \nxsi:noNamespaceSchemaLocation=\n../../../../../../../vendor/magento/mtf/etc/pages.xsd\n\n    \npage\n \nname=\nSynonymsIndex\n \narea=\nAdminhtml\n \nmca=\nsearch/synonyms/index\n \nmodule=\nMagento_Search\n\n        \nblock\n \nname=\npageActionsBlock\n \nclass=\nMagento\\Backend\\Test\\Block\\GridPageActions\n \nlocator=\n.page-main-actions\n \nstrategy=\ncss selector\n/\n\n    \n/page\n\n\n/config\n\n\n\nTo generate PHP classes for these pages, enter the following command from your terminal.\n\nphp \nmagento2_root_dir\n/dev/tests/functional/utils/generate.php\n\n\n\nDefine the test() method\n\n\n?php\n\n\n\nnamespace\n \nMagento\\Search\\Test\\TestCase\n;\n\n\n\nuse\n \nMagento\\Mtf\\TestCase\\Injectable\n;\n\n\nuse\n \nMagento\\Search\\Test\\Fixture\\Synonym\n;\n\n\nuse\n \nMagento\\Search\\Test\\Page\\Adminhtml\\SynonymsIndex\n;\n\n\nuse\n \nMagento\\Search\\Test\\Page\\Adminhtml\\SynonymsNew\n;\n\n\n\n/**\n\n\n * Steps:\n\n\n * 1. Log in to Admin.\n\n\n * 2. Open the Search Synonym page.\n\n\n * 3. Click the \nNew Synonym Group\n button.\n\n\n * 4. Enter data according to a data set. For each variation, the synonyms must have unique identifiers.\n\n\n * 5. Click the \nSave Synonym Group\n button.\n\n\n * 6. Verify the synonym group saved successfully\n\n\n */\n\n\nclass\n \nCreateSynonymEntityTest\n \nextends\n \nInjectable\n\n\n{\n\n    \n/**\n\n\n     * Search Synonyms Index page.\n\n\n     *\n\n\n     * @var SynonymsIndex\n\n\n     */\n\n    \nprivate\n \n$synonymsIndex\n;\n\n\n    \n/**\n\n\n     * New Synonym Group page.\n\n\n     *\n\n\n     * @var SynonymsNew\n\n\n     */\n\n    \nprivate\n \n$synonymsNew\n;\n\n\n    \n/**\n\n\n     * Inject pages.\n\n\n     *\n\n\n     * @param SynonymsIndex $synonymsIndex\n\n\n     * @param SynonymsNew $synonymsNew\n\n\n     * @return void\n\n\n     */\n\n    \npublic\n \nfunction\n \n__inject\n(\n\n        \nSynonymsIndex\n \n$synonymsIndex\n,\n\n        \nSynonymsNew\n \n$synonymsNew\n\n    \n)\n \n{\n\n        \n$this\n-\nsynonymsIndex\n \n=\n \n$synonymsIndex\n;\n\n        \n$this\n-\nsynonymsNew\n \n=\n \n$synonymsNew\n;\n\n    \n}\n\n\n    \n/**\n\n\n     * Create Synonym group test.\n\n\n     *\n\n\n     * @param Synonym $synonym\n\n\n     * @return void\n\n\n     */\n\n    \npublic\n \nfunction\n \ntest\n(\nSynonym\n \n$synonym\n)\n\n    \n{\n\n        \n// Steps\n\n        \n$this\n-\nsynonymsIndex\n-\nopen\n();\n\n        \n$this\n-\nsynonymsIndex\n-\ngetPageActionsBlock\n()\n-\naddNew\n();\n\n        \n$this\n-\nsynonymsNew\n-\ngetSynonymForm\n()\n-\nfill\n(\n$synonym\n);\n\n        \n$this\n-\nsynonymsNew\n-\ngetFormPageActions\n()\n-\nsave\n();\n\n    \n}\n\n\n}\n\n\n\n\n\nCreate the assertion\n\n\nBy making a simple change, we can create a constraint class that is needed \\Magento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage\n\n?php\n\n\n/**\n\n\n * Copyright \u00a9 2015 Magento. All rights reserved.\n\n\n * See COPYING.txt for license details.\n\n\n */\n\n\n\nnamespace\n \nMagento\\Customer\\Test\\Constraint\n;\n\n\n\nuse\n \nMagento\\Customer\\Test\\Page\\Adminhtml\\CustomerIndex\n;\n\n\nuse\n \nMagento\\Mtf\\Constraint\\AbstractConstraint\n;\n\n\n\n/**\n\n\n * Assertion to check Customer success save message.\n\n\n */\n\n\nclass\n \nAssertCustomerSuccessSaveMessage\n \nextends\n \nAbstractConstraint\n\n\n{\n\n    \nconst\n \nSUCCESS_MESSAGE\n \n=\n \nYou saved the customer.\n;\n\n\n    \n/**\n\n\n     * Assert that success message is displayed after customer save.\n\n\n     *\n\n\n     * @param CustomerIndex $pageCustomerIndex\n\n\n     * @return void\n\n\n     */\n\n    \npublic\n \nfunction\n \nprocessAssert\n(\nCustomerIndex\n \n$pageCustomerIndex\n)\n\n    \n{\n\n        \n$actualMessage\n \n=\n \n$pageCustomerIndex\n-\ngetMessagesBlock\n()\n-\ngetSuccessMessage\n();\n\n        \n\\PHPUnit_Framework_Assert\n::\nassertEquals\n(\n\n            \nself\n::\nSUCCESS_MESSAGE\n,\n\n            \n$actualMessage\n,\n\n            \nWrong success message is displayed.\n\n            \n.\n \n\\n\nExpected: \n \n.\n \nself\n::\nSUCCESS_MESSAGE\n\n            \n.\n \n\\n\nActual: \n \n.\n \n$actualMessage\n\n        \n);\n\n    \n}\n\n\n    \n/**\n\n\n     * Text success save message is displayed.\n\n\n     *\n\n\n     * @return string\n\n\n     */\n\n    \npublic\n \nfunction\n \ntoString\n()\n\n    \n{\n\n        \nreturn\n \nAssert that success message is displayed.\n;\n\n    \n}\n\n\n}\n\n\n\nAnd now we can add \n to each variation of a data set \n/dev/tests/functional/tests/app/Magento/Search/Test/TestCase/CreateSynonymEntityTest.xml:\n\n?xml version=\n1.0\n encoding=\nutf-8\n?\n\n\nconfig\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n \nxsi:noNamespaceSchemaLocation=\n../../../../../../vendor/magento/mtf/etc/variations.xsd\n\n    \ntestCase\n \nname=\nMagento\\Search\\Test\\TestCase\\CreateSynonymEntityTest\n \nsummary=\nCreate Synonyms\n \nticketId=\nMAGETWO-23022016\n\n        \nvariation\n \nname=\nCreateCategoryEntityTestVariation1_all_websites_all_store_views\n \nsummary=\nCreate synonym for all websites and all store views\n\n            \ndata\n \nname=\nsynonym/data/synonyms\n \nxsi:type=\nstring\nshoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation%\n/data\n\n            \nconstraint\n \nname=\nMagento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage\n \n/\n\n        \n/variation\n\n        \nvariation\n \nname=\nCreateCategoryEntityTestVariation2_main_website_all_store_views\n \nsummary=\nCreate synonyms for main website and all store views\n\n            \ndata\n \nname=\nsynonym/data/synonyms\n \nxsi:type=\nstring\nshoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation%\n/data\n\n            \ndata\n \nname=\nsynonym/data/scope_id/dataset\n \nxsi:type=\nstring\nall_store_views\n/data\n\n            \nconstraint\n \nname=\nMagento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage\n \n/\n\n        \n/variation\n\n        \nvariation\n \nname=\nCreateCategoryEntityTestVariation3_main_website_default_store_view\n \nsummary=\nCreate synonyms for main website and default store views\n\n            \ndata\n \nname=\nsynonym/data/synonyms\n \nxsi:type=\nstring\nshoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation%\n/data\n\n            \ndata\n \nname=\nsynonym/data/scope_id/dataset\n \nxsi:type=\nstring\ndefault_store_view\n/data\n\n            \nconstraint\n \nname=\nMagento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage\n \n/\n\n        \n/variation\n\n    \n/testCase\n\n\n/config", 
            "title": "Create a Test - Practice"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#test-creation", 
            "text": "", 
            "title": "Test creation"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#create-the-testing-object-a-fixture", 
            "text": "Use a generateFixtureXml.php to create a new fixture. cd   magento2_root_dir /dev/tests/functional/utils\nphp -f generateFixtureXml.php -- --name synonym --entity_type search_synonyms --collection Magento \\\\ Search \\\\ Model \\\\ ResourceModel \\\\ Query \\\\ Collection     Parameter  Value  Explanation      --name  synonym  A name of the fixture. It can have any name. synonym seems to be logical.    --entity_type  search_synonyms  Database table name where entity data is stored. You can track database input when you perform a manual testing. A new record will be created in a table that you need.    --collection  Magento\\Search\\Model\\ResourceModel\\Query\\Collection  Collection to generate data sets. Synonyms are the entities of a Magento_Search module. A collection can always be found in model resources.     As a result of previous commands, a brand new fixture can be found in the  /dev/tests/functional/tests/app/Magento/Search/Test/Fixture directory.  https://devdocs.magento.com/guides/v2.2/mtf/create_test/create_new_test.html  Now we should change the fixture. Instead of store_id and website_id, we must use scope_id with the Magento\\Search\\Test\\Fixture\\Synonym\\ScopeId data source class.", 
            "title": "Create the testing object - a fixture"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#create-the-initial-test-case", 
            "text": "From the test case topic we know about the structure, location and name of the test case. In this example it is named CreateSynonymEntityTest.php and stored in  /dev/tests/functional/tests/app/Magento/Search/Test/TestCase.\nWe can code the initialization of these pages in the test using an __inject() method of the Magento\\Mtf\\TestCase\\Injectable class. The pages will be created in Step 5. Also, we will use the fixture from the Step 2. ?php  namespace   Magento\\Search\\Test\\TestCase ;  use   Magento\\Mtf\\TestCase\\Injectable ;  use   Magento\\Search\\Test\\Fixture\\Synonym ;  /**   * Steps:   * 1. Log in to Admin.   * 2. Open the Search Synonym page.   * 3. Click the  New Synonym Group  button.   * 4. Enter data according to a data set. For each variation, the synonyms must have unique identifiers.   * 5. Click the  Save Synonym Group  button.   * 6. Verify the synonym group saved successfully.   */  class   CreateSynonymEntityTest   extends   Injectable  { \n     /**       * Search Synonyms Index page.       *       * @var SynonymsIndex       */ \n     private   $synonymsIndex ; \n\n     /**       * New Synonym Group page.       *       * @var SynonymsNew       */ \n     private   $synonymsNew ; \n\n     /**       * Inject synonym pages.       *       * @param SynonymsIndex $synonymsIndex       * @param SynonymsNew $synonymsNew       * @return void       */ \n     public   function   __inject ( \n         SynonymsIndex   $synonymsIndex , \n         SynonymsNew   $synonymsNew \n     )   { \n         $this - synonymsIndex   =   $synonymsIndex ; \n         $this - synonymsNew   =   $synonymsNew ; \n     } \n\n     /**       * Create Synonym group test.       *       * @param Synonym $synonym       * @return void       */ \n     public   function   test ( Synonym   $synonym ) \n     { \n         // Steps \n     }  }", 
            "title": "Create the initial test case"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#create-the-data-set", 
            "text": "Now we can add a data set with variations that cover cases in the test description:  /dev/tests/functional/tests/app/Magento/Search/Test/TestCase/CreateSynonymEntityTest.xml ?xml version= 1.0  encoding= utf-8 ?  config   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance   xsi:noNamespaceSchemaLocation= ../../../../../../vendor/magento/mtf/etc/variations.xsd \n     testCase   name= Magento\\Search\\Test\\TestCase\\CreateSynonymEntityTest   summary= Create Synonyms   ticketId= MAGETWO-23022016 \n         variation   name= CreateCategoryEntityTestVariation1_all_websites_all_store_views   summary= Create synonym for all websites and all store views \n             data   name= synonym/data/synonyms   xsi:type= string shoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation% /data \n         /variation \n         variation   name= CreateCategoryEntityTestVariation2_main_website_all_store_views   summary= Create synonyms for main website and all store views \n             data   name= synonym/data/synonyms   xsi:type= string shoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation% /data \n             data   name= synonym/data/scope_id/dataset   xsi:type= string all_store_views /data \n         /variation \n         variation   name= CreateCategoryEntityTestVariation3_main_website_default_store_view   summary= Create synonyms for main website and default store views \n             data   name= synonym/data/synonyms   xsi:type= string shoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation% /data \n             data   name= synonym/data/scope_id/dataset   xsi:type= string default_store_view /data \n         /variation \n     /testCase  /config", 
            "title": "Create the data set"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#create-the-pages", 
            "text": "In Step 3, we added two pages to the test case class. Because both pages are in the Admin area, we should create them in the  /dev/tests/functional/tests/app/Magento/Search/Test/Page/Adminhtml directory.  SynonymsIndex.xml  ?xml version= 1.0  encoding= utf-8 ?  config   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance   xsi:noNamespaceSchemaLocation= ../../../../../../../vendor/magento/mtf/etc/pages.xsd \n     page   name= SynonymsIndex   area= Adminhtml   mca= search/synonyms/index   module= Magento_Search \n         block   ...   / \n     /page  /config  \nTo generate PHP classes for these pages enter and run in your terminal php  magento2_root_dir /dev/tests/functional/utils/generate.php", 
            "title": "Create the pages"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#create-the-blocks", 
            "text": "How to code \u2018Click the \u201cNew Synonym Group\u201d button\u2019 \nFortunately, you already have a block that contains a method to add a new entity in a grid: \\Magento\\Backend\\Test\\Block\\GridPageActions. ?php  /**   * Copyright \u00a9 2013-2017 Magento, Inc. All rights reserved.   * See COPYING.txt for license details.   */  namespace   Magento\\Backend\\Test\\Block ;  /**   * Class GridPageActions   * Grid page actions block   */  class   GridPageActions   extends   PageActions  { \n     /**       *  Add New  button       *       * @var string       */ \n     protected   $addNewButton   =   #add ; \n     /**       *  Create Store  button selector       *       * @var string       */ \n     protected   $createStoreButton   =   #add_group ; \n     /**       * Click on  Add New  button       *       * @return void       */ \n     public   function   addNew () \n     { \n         $this - _rootElement - find ( $this - addNewButton ) - click (); \n     } \n     /**       * Click on  Create Store  button       *       * @return void       */ \n     public   function   createStoreGroup () \n     { \n         $this - _rootElement - find ( $this - createStoreButton ) - click (); \n     }  }  \nIn HTML page, to locate the UI block that contains a button, we will use a .page-main-actions locator. Learn how to define a locator.  The SynonymsIndex.xml page must contain the following block to be able to run the method in a test case. ?xml version= 1.0  encoding= utf-8 ?  config   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance   xsi:noNamespaceSchemaLocation= ../../../../../../../vendor/magento/mtf/etc/pages.xsd \n     page   name= SynonymsIndex   area= Adminhtml   mca= search/synonyms/index   module= Magento_Search \n         block   name= pageActionsBlock   class= Magento\\Backend\\Test\\Block\\GridPageActions   locator= .page-main-actions   strategy= css selector / \n     /page  /config", 
            "title": "Create the blocks"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#form-mapping", 
            "text": "Learn about form mapping..", 
            "title": "Form mapping"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#add-the-blocks-to-pages", 
            "text": "To associate methods with pages, blocks must be added to pages.  Search Synonym page  A corresponding page object in a functional test is  /dev/tests/functional/tests/app/Magento/Search/Test/Page/Adminhtml/SynonymsIndex.xml  The page with a block: ?xml version= 1.0  encoding= utf-8 ?  config   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance   xsi:noNamespaceSchemaLocation= ../../../../../../../vendor/magento/mtf/etc/pages.xsd \n     page   name= SynonymsIndex   area= Adminhtml   mca= search/synonyms/index   module= Magento_Search \n         block   name= pageActionsBlock   class= Magento\\Backend\\Test\\Block\\GridPageActions   locator= .page-main-actions   strategy= css selector / \n     /page  /config  \nTo generate PHP classes for these pages, enter the following command from your terminal. php  magento2_root_dir /dev/tests/functional/utils/generate.php", 
            "title": "Add the blocks to pages"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#define-the-test-method", 
            "text": "?php  namespace   Magento\\Search\\Test\\TestCase ;  use   Magento\\Mtf\\TestCase\\Injectable ;  use   Magento\\Search\\Test\\Fixture\\Synonym ;  use   Magento\\Search\\Test\\Page\\Adminhtml\\SynonymsIndex ;  use   Magento\\Search\\Test\\Page\\Adminhtml\\SynonymsNew ;  /**   * Steps:   * 1. Log in to Admin.   * 2. Open the Search Synonym page.   * 3. Click the  New Synonym Group  button.   * 4. Enter data according to a data set. For each variation, the synonyms must have unique identifiers.   * 5. Click the  Save Synonym Group  button.   * 6. Verify the synonym group saved successfully   */  class   CreateSynonymEntityTest   extends   Injectable  { \n     /**       * Search Synonyms Index page.       *       * @var SynonymsIndex       */ \n     private   $synonymsIndex ; \n\n     /**       * New Synonym Group page.       *       * @var SynonymsNew       */ \n     private   $synonymsNew ; \n\n     /**       * Inject pages.       *       * @param SynonymsIndex $synonymsIndex       * @param SynonymsNew $synonymsNew       * @return void       */ \n     public   function   __inject ( \n         SynonymsIndex   $synonymsIndex , \n         SynonymsNew   $synonymsNew \n     )   { \n         $this - synonymsIndex   =   $synonymsIndex ; \n         $this - synonymsNew   =   $synonymsNew ; \n     } \n\n     /**       * Create Synonym group test.       *       * @param Synonym $synonym       * @return void       */ \n     public   function   test ( Synonym   $synonym ) \n     { \n         // Steps \n         $this - synonymsIndex - open (); \n         $this - synonymsIndex - getPageActionsBlock () - addNew (); \n         $this - synonymsNew - getSynonymForm () - fill ( $synonym ); \n         $this - synonymsNew - getFormPageActions () - save (); \n     }  }", 
            "title": "Define the test() method"
        }, 
        {
            "location": "/magento/test/functional/create_test_practice/#create-the-assertion", 
            "text": "By making a simple change, we can create a constraint class that is needed \\Magento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage ?php  /**   * Copyright \u00a9 2015 Magento. All rights reserved.   * See COPYING.txt for license details.   */  namespace   Magento\\Customer\\Test\\Constraint ;  use   Magento\\Customer\\Test\\Page\\Adminhtml\\CustomerIndex ;  use   Magento\\Mtf\\Constraint\\AbstractConstraint ;  /**   * Assertion to check Customer success save message.   */  class   AssertCustomerSuccessSaveMessage   extends   AbstractConstraint  { \n     const   SUCCESS_MESSAGE   =   You saved the customer. ; \n\n     /**       * Assert that success message is displayed after customer save.       *       * @param CustomerIndex $pageCustomerIndex       * @return void       */ \n     public   function   processAssert ( CustomerIndex   $pageCustomerIndex ) \n     { \n         $actualMessage   =   $pageCustomerIndex - getMessagesBlock () - getSuccessMessage (); \n         \\PHPUnit_Framework_Assert :: assertEquals ( \n             self :: SUCCESS_MESSAGE , \n             $actualMessage , \n             Wrong success message is displayed. \n             .   \\n Expected:    .   self :: SUCCESS_MESSAGE \n             .   \\n Actual:    .   $actualMessage \n         ); \n     } \n\n     /**       * Text success save message is displayed.       *       * @return string       */ \n     public   function   toString () \n     { \n         return   Assert that success message is displayed. ; \n     }  }  \nAnd now we can add   to each variation of a data set  /dev/tests/functional/tests/app/Magento/Search/Test/TestCase/CreateSynonymEntityTest.xml: ?xml version= 1.0  encoding= utf-8 ?  config   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance   xsi:noNamespaceSchemaLocation= ../../../../../../vendor/magento/mtf/etc/variations.xsd \n     testCase   name= Magento\\Search\\Test\\TestCase\\CreateSynonymEntityTest   summary= Create Synonyms   ticketId= MAGETWO-23022016 \n         variation   name= CreateCategoryEntityTestVariation1_all_websites_all_store_views   summary= Create synonym for all websites and all store views \n             data   name= synonym/data/synonyms   xsi:type= string shoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation% /data \n             constraint   name= Magento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage   / \n         /variation \n         variation   name= CreateCategoryEntityTestVariation2_main_website_all_store_views   summary= Create synonyms for main website and all store views \n             data   name= synonym/data/synonyms   xsi:type= string shoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation% /data \n             data   name= synonym/data/scope_id/dataset   xsi:type= string all_store_views /data \n             constraint   name= Magento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage   / \n         /variation \n         variation   name= CreateCategoryEntityTestVariation3_main_website_default_store_view   summary= Create synonyms for main website and default store views \n             data   name= synonym/data/synonyms   xsi:type= string shoes %isolation%, foot wear %isolation%, men shoes %isolation%, women shoes %isolation% /data \n             data   name= synonym/data/scope_id/dataset   xsi:type= string default_store_view /data \n             constraint   name= Magento\\Search\\Test\\Constraint\\AssertSynonymSuccessSaveMessage   / \n         /variation \n     /testCase  /config", 
            "title": "Create the assertion"
        }, 
        {
            "location": "/magento/test/functional/entities/", 
            "text": "Functional Testing Framework Entities\n\n\nFunctional Testing Framework Entities. \nhttps://devdocs.magento.com/guides/v2.2/mtf/mtf_entities.html\n\n\nFollowing is a list of all FTF entities.\n\n\n\n\nFixture\n\n\nFixture overview\n\n\nCreate new fixture\n\n\nRead and update new fixture\n\n\nAdd repository to the fixture field\n\n\nAdd data source to the fixture field\n\n\nMerge fixtures\n\n\nExtend fixture\n\n\n\n\n\n\nFixture Repository\n\n\nHandler\n\n\nBlock\n\n\nTypified element\n\n\nPage\n\n\nConstraint\n\n\nData set\n\n\nTest case\n\n\nScenario test", 
            "title": "Functional Testing Framework Entities"
        }, 
        {
            "location": "/magento/test/functional/entities/#functional-testing-framework-entities", 
            "text": "Functional Testing Framework Entities.  https://devdocs.magento.com/guides/v2.2/mtf/mtf_entities.html  Following is a list of all FTF entities.   Fixture  Fixture overview  Create new fixture  Read and update new fixture  Add repository to the fixture field  Add data source to the fixture field  Merge fixtures  Extend fixture    Fixture Repository  Handler  Block  Typified element  Page  Constraint  Data set  Test case  Scenario test", 
            "title": "Functional Testing Framework Entities"
        }, 
        {
            "location": "/magento/composer/", 
            "text": "Overview\n\n\nThis is our developer docs about How to install Magento extension by Composer\n\n\nDocuments\n\n\n\n\nhttps://devdocs.magento.com/guides/v2.0/extension-dev-guide/package/package_module.html\n\n\nhttps://getcomposer.org/doc/articles/handling-private-packages-with-satis.md\n\n\n\n\nSolution\n\n\n\n\n\n\nD\u00f9ng \nSatis\n \u0111\u1ec3 build 1 file packages.json t\u0129nh bao g\u1ed3m t\u1ea5t c\u1ea3 c\u00e1c repository c\u1ea7n thi\u1ebft\n\n\n\n\n\n\nBuild Satis v\u00e0 \u0111\u1eb7t tr\u00ean domain: \nhttps://packages.magestore.com\n Ph\u1ea7n quy\u1ec1n server ch\u1ec9 cho ph\u00e9p IP c\u1ee7a Magestore \u0111\u1ecdc \u0111\u1ebfn server n\u00e0y (\u0111\u1eb7c bi\u1ec7t l\u00e0 file packages.json)\nV\u00ed d\u1ee5 d\u00f9ng .htaccess:\n\norder deny,allow\ndeny from all\nallow from 128.199.161.147\n\n\n\n\n\n\n\nTr\u1ecf domain : \nhttps://repo.magestore.com\n \u0111\u1ebfn 1 th\u01b0 m\u1ee5c ch\u01b0a file packages.json r\u1ed7ng d\u1ea1ng:\n\n{\n    \npackages\n: []\n}\n\n\n\n\n\n\n\nPh\u00e2n quy\u1ec1n th\u01b0 m\u1ee5c repo \u0111\u1ec3: Ch\u1eb7n to\u00e0n b\u1ed9 quy\u1ec1n truy c\u1eadp \u0111\u1ebfn th\u01b0 m\u1ee5c (chuy\u1ec3n h\u01b0\u1edbng v\u1ec1 trang ch\u1ee7 magestore ch\u1eb3ng h\u1ea1n), ri\u00eang request \u0111\u1ebfn \nhttps://repo.magestore.com/packages.json\n th\u00ec redirect v\u1ec1 1 action tr\u00ean magento 2  (site Magstore) \u0111\u1ec3 th\u1ef1c hi\u1ec7n authorization + build content cho packages.json\nV\u00ed d\u1ee5 action: https:/magestore.com/mscomposer/packages/find/\n\n\n\n\n\n\nT\u1ea1i action n\u00e0y s\u1ebd y\u00eau c\u1ea7u nh\u1eadp th\u00f4ng tin authorization \u0111\u1ec3 x\u00e1c th\u1ef1c. Th\u00f4ng tin g\u1ed3m public key + private key user generate t\u1eeb account (Gi\u1ed1ng magento/amasty )\n\n\n\n\n\n\nN\u1ebfu x\u00e1c th\u1ef1c th\u00e0nh c\u00f4ng s\u1ebd return v\u1ec1 n\u1ed9i dung c\u00e1c packages \u0111\u01b0\u1ee3c ph\u00e9p truy c\u1eadp g\u1ed3m:\nDanh s\u00e1ch package define \u1edf b\u01b0\u1edbc 1 (all package c\u1ee7a repo) v\u00e0 filter \u0111i ch\u1ec9 cho truy c\u1eadp c\u00e1c package m\u00e0 kh\u00e1ch h\u00e0ng \u0111\u00e3 mua\n\n\n\n\n\n\nH\u1ec7 th\u00f4ng qu\u1ea3n l\u00fd packages tr\u00ean magestore s\u1ebd bao g\u1ed3m:\n\n\n\n\n[Frontend] 1 page \u0111\u1ec3 customer view list c\u00e1c package h\u1ecd c\u00f3 th\u1ec3 c\u00e0i qua composer\n\n\n[Frontend] 1 page cho customer generate access keys: \nhttps://prnt.sc/kqaanl\n\n\n[Admin] Settings: enable/ setup domain \u0111\u00e3 d\u00f9ng \u0111\u1ec3 build statis: \nhttps://prnt.sc/kqaaz8\n\n\n[Admin] Package list: \nhttps://prnt.sc/kqab7d\n\n\n[Admin] Package detail: \nhttps://prnt.sc/kqabcx\n\n\n[Admin] Link package v\u1edbi product \nhttps://prnt.sc/kqabh1\n (mua sp th\u00ec \u0111c access package)\n\n\n[Admin] Th\u00f4ng tin repo: \nhttps://prnt.sc/kqabsg\n\n\n[Admin] Assign package cho repo: \nhttps://prnt.sc/kqabu6\n\nC\u00f3 th\u1ec3 auto generate file config cho Satis \u0111\u1ec3 t\u1ef1 build l\u1ea1i package khi th\u00f4ng tin repo thay \u0111\u1ed5i / khi m\u00ecnh release version m\u1edbi", 
            "title": "Install extension Magento by composer"
        }, 
        {
            "location": "/magento/composer/#overview", 
            "text": "This is our developer docs about How to install Magento extension by Composer", 
            "title": "Overview"
        }, 
        {
            "location": "/magento/composer/#documents", 
            "text": "https://devdocs.magento.com/guides/v2.0/extension-dev-guide/package/package_module.html  https://getcomposer.org/doc/articles/handling-private-packages-with-satis.md", 
            "title": "Documents"
        }, 
        {
            "location": "/magento/composer/#solution", 
            "text": "D\u00f9ng  Satis  \u0111\u1ec3 build 1 file packages.json t\u0129nh bao g\u1ed3m t\u1ea5t c\u1ea3 c\u00e1c repository c\u1ea7n thi\u1ebft    Build Satis v\u00e0 \u0111\u1eb7t tr\u00ean domain:  https://packages.magestore.com  Ph\u1ea7n quy\u1ec1n server ch\u1ec9 cho ph\u00e9p IP c\u1ee7a Magestore \u0111\u1ecdc \u0111\u1ebfn server n\u00e0y (\u0111\u1eb7c bi\u1ec7t l\u00e0 file packages.json)\nV\u00ed d\u1ee5 d\u00f9ng .htaccess: order deny,allow\ndeny from all\nallow from 128.199.161.147    Tr\u1ecf domain :  https://repo.magestore.com  \u0111\u1ebfn 1 th\u01b0 m\u1ee5c ch\u01b0a file packages.json r\u1ed7ng d\u1ea1ng: {\n     packages : []\n}    Ph\u00e2n quy\u1ec1n th\u01b0 m\u1ee5c repo \u0111\u1ec3: Ch\u1eb7n to\u00e0n b\u1ed9 quy\u1ec1n truy c\u1eadp \u0111\u1ebfn th\u01b0 m\u1ee5c (chuy\u1ec3n h\u01b0\u1edbng v\u1ec1 trang ch\u1ee7 magestore ch\u1eb3ng h\u1ea1n), ri\u00eang request \u0111\u1ebfn  https://repo.magestore.com/packages.json  th\u00ec redirect v\u1ec1 1 action tr\u00ean magento 2  (site Magstore) \u0111\u1ec3 th\u1ef1c hi\u1ec7n authorization + build content cho packages.json\nV\u00ed d\u1ee5 action: https:/magestore.com/mscomposer/packages/find/    T\u1ea1i action n\u00e0y s\u1ebd y\u00eau c\u1ea7u nh\u1eadp th\u00f4ng tin authorization \u0111\u1ec3 x\u00e1c th\u1ef1c. Th\u00f4ng tin g\u1ed3m public key + private key user generate t\u1eeb account (Gi\u1ed1ng magento/amasty )    N\u1ebfu x\u00e1c th\u1ef1c th\u00e0nh c\u00f4ng s\u1ebd return v\u1ec1 n\u1ed9i dung c\u00e1c packages \u0111\u01b0\u1ee3c ph\u00e9p truy c\u1eadp g\u1ed3m:\nDanh s\u00e1ch package define \u1edf b\u01b0\u1edbc 1 (all package c\u1ee7a repo) v\u00e0 filter \u0111i ch\u1ec9 cho truy c\u1eadp c\u00e1c package m\u00e0 kh\u00e1ch h\u00e0ng \u0111\u00e3 mua    H\u1ec7 th\u00f4ng qu\u1ea3n l\u00fd packages tr\u00ean magestore s\u1ebd bao g\u1ed3m:   [Frontend] 1 page \u0111\u1ec3 customer view list c\u00e1c package h\u1ecd c\u00f3 th\u1ec3 c\u00e0i qua composer  [Frontend] 1 page cho customer generate access keys:  https://prnt.sc/kqaanl  [Admin] Settings: enable/ setup domain \u0111\u00e3 d\u00f9ng \u0111\u1ec3 build statis:  https://prnt.sc/kqaaz8  [Admin] Package list:  https://prnt.sc/kqab7d  [Admin] Package detail:  https://prnt.sc/kqabcx  [Admin] Link package v\u1edbi product  https://prnt.sc/kqabh1  (mua sp th\u00ec \u0111c access package)  [Admin] Th\u00f4ng tin repo:  https://prnt.sc/kqabsg  [Admin] Assign package cho repo:  https://prnt.sc/kqabu6 \nC\u00f3 th\u1ec3 auto generate file config cho Satis \u0111\u1ec3 t\u1ef1 build l\u1ea1i package khi th\u00f4ng tin repo thay \u0111\u1ed5i / khi m\u00ecnh release version m\u1edbi", 
            "title": "Solution"
        }, 
        {
            "location": "/magento/note/", 
            "text": "Note about Magento\n\n\n\n\n\n\nSome libs for Magento\n\n\nExample:\n\n\n\n\nBash script install magento 1, 2\n\n\nFile database export mysql\n\n\n\n\n\n\n\n\nWork in site online\n\n\n\n\n\n\nPermission: \n\ntr\u01b0\u1edbc khi work em n\u00ean check mode\nphp bin/magento deploy:mode:show\nth\u01b0\u1eddng c\u00e0i xong s\u1ebd \u0111\u1ec3 default\nn\u00ean chuy\u1ec3n qua developer\nphp bin/magento deploy:mode:set developer\n\u0111\u1ec3 e s\u1eeda code em kh\u00f4ng ph\u1ea3i ch\u1ea1y l\u1ec7nh compile l\u1ea1i\nv\u1eeba r\u1ed3i site b\u1ecb chuy\u1ec3n qua mode production\nn\u1ebfu chuy\u1ec3n qua m\u00e0 em ch\u1ea1y setup upgrade\nth\u00ec e p ch\u1ea1y th\u00eam deploy content n\u1eefa\nsite kh\u00e1ch th\u00ec \u0111\u1ec3 b\u1ea3o \u0111\u1ea3m v\u1ec1 m\u1eb7t security th\u00ec e ch\u1ec9 c\u1ea7n d\u00f9ng 755 th\u00f4i\n\n\n\n\n\n\n\nConfig permission for folder and file in root magento dir\n\n\n(Faster)\n\nfind . -type f -print0 \n|\n xargs -I % -0 chmod \n644\n %\nfind . -type d -print0 \n|\n xargs -I % -0 chmod \n755\n %\n\n\nor\n\nfind . -type d -exec chmod \n755\n \n{}\n \n\\;\n\nfind . -type f -exec chmod \n644\n \n{}\n \n\\;\n\n\n\n\n\n\n\n\n\n\n\n\nDebug\n    \nvar_dump($item-\ndebug());\n\n\ndie();", 
            "title": "Note"
        }, 
        {
            "location": "/magento/note/#note-about-magento", 
            "text": "Some libs for Magento  Example:   Bash script install magento 1, 2  File database export mysql     Work in site online    Permission:  tr\u01b0\u1edbc khi work em n\u00ean check mode\nphp bin/magento deploy:mode:show\nth\u01b0\u1eddng c\u00e0i xong s\u1ebd \u0111\u1ec3 default\nn\u00ean chuy\u1ec3n qua developer\nphp bin/magento deploy:mode:set developer\n\u0111\u1ec3 e s\u1eeda code em kh\u00f4ng ph\u1ea3i ch\u1ea1y l\u1ec7nh compile l\u1ea1i\nv\u1eeba r\u1ed3i site b\u1ecb chuy\u1ec3n qua mode production\nn\u1ebfu chuy\u1ec3n qua m\u00e0 em ch\u1ea1y setup upgrade\nth\u00ec e p ch\u1ea1y th\u00eam deploy content n\u1eefa\nsite kh\u00e1ch th\u00ec \u0111\u1ec3 b\u1ea3o \u0111\u1ea3m v\u1ec1 m\u1eb7t security th\u00ec e ch\u1ec9 c\u1ea7n d\u00f9ng 755 th\u00f4i    Config permission for folder and file in root magento dir  (Faster) find . -type f -print0  |  xargs -I % -0 chmod  644  %\nfind . -type d -print0  |  xargs -I % -0 chmod  755  % \nor find . -type d -exec chmod  755   {}   \\; \nfind . -type f -exec chmod  644   {}   \\;       Debug\n     var_dump($item- debug());  die();", 
            "title": "Note about Magento"
        }, 
        {
            "location": "/docker/", 
            "text": "Overview\n\n\nThis is our developer docs about Docker. Our docs includes:\n\n\n\n\nInstall\n\n\nGet started\n\n\nDevelop with Docker\n\n\nConfigure networking\n\n\nSample use Docker\n\n\nNote", 
            "title": "Overview"
        }, 
        {
            "location": "/docker/#overview", 
            "text": "This is our developer docs about Docker. Our docs includes:   Install  Get started  Develop with Docker  Configure networking  Sample use Docker  Note", 
            "title": "Overview"
        }, 
        {
            "location": "/docker/install/", 
            "text": "Overview\n\n\nThis is our developer docs about \nHow to install Docker\n\n\nInstall Docker in Ubuntu\n\n\n\n\nUpdate the apt package index:\n    \nsudo apt-get update\n\n\n\nInstall packages to allow \napt\n to use a repository over HTTPS:\n    \nsudo apt-get install \n\\\n\n    apt-transport-https \n\\\n\n    ca-certificates \n\\\n\n    curl \n\\\n\n    software-properties-common\n\n\n\nAdd Docker\u2019s official GPG key:\n    \ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg \n|\n sudo apt-key add -\n\n\n\nSet up the stable repository:\n    \nsudo add-apt-repository \n\\\n\n   \ndeb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n\n\n   \n$(\nlsb_release -cs\n)\n \\\n\n\n   stable\n\n\n\n\nInstall Docker CE\n    \nsudo apt-get update\n\n\n    \nsudo apt-get install docker-ce", 
            "title": "Install"
        }, 
        {
            "location": "/docker/install/#overview", 
            "text": "This is our developer docs about  How to install Docker", 
            "title": "Overview"
        }, 
        {
            "location": "/docker/install/#install-docker-in-ubuntu", 
            "text": "Update the apt package index:\n     sudo apt-get update  Install packages to allow  apt  to use a repository over HTTPS:\n     sudo apt-get install  \\ \n    apt-transport-https  \\ \n    ca-certificates  \\ \n    curl  \\ \n    software-properties-common  Add Docker\u2019s official GPG key:\n     curl -fsSL https://download.docker.com/linux/ubuntu/gpg  |  sudo apt-key add -  Set up the stable repository:\n     sudo add-apt-repository  \\ \n    deb [arch=amd64] https://download.docker.com/linux/ubuntu \\      $( lsb_release -cs )  \\     stable   Install Docker CE\n     sudo apt-get update \n     sudo apt-get install docker-ce", 
            "title": "Install Docker in Ubuntu"
        }, 
        {
            "location": "/docker/get-started/", 
            "text": "Overview\n\n\nThis is our developer docs about Docker. Our docs includes:\n\n\nPart 1: Orientation and setup\n\n\n\n\nImages and containers\n\n\nInstall Docker\n\n\n\n\nPart 2: Containers\n\n\n\n\nDefine a container with Dockerfile\n\n\nBuild the app\n\n\nRun the app\n\n\nShare your image\n\n\n\n\nPart 3: Services\n\n\n\n\nAbout services\n\n\ndocker-compose.yml file\n\n\n\n\nPart 4: Swarms\n\n\n\n\nUnderstanding Swarm clusters\n\n\nSet up your swarm\n\n\nDeploy your app on the swarm cluster\n\n\n\n\nPart 5: Stacks\n\n\n\n\nAdd a new service and redeploy\n\n\nPersist the data\n\n\n\n\nPart 6: Deploy your app", 
            "title": "Get started"
        }, 
        {
            "location": "/docker/get-started/#overview", 
            "text": "This is our developer docs about Docker. Our docs includes:", 
            "title": "Overview"
        }, 
        {
            "location": "/docker/get-started/#part-1-orientation-and-setup", 
            "text": "Images and containers  Install Docker", 
            "title": "Part 1: Orientation and setup"
        }, 
        {
            "location": "/docker/get-started/#part-2-containers", 
            "text": "Define a container with Dockerfile  Build the app  Run the app  Share your image", 
            "title": "Part 2: Containers"
        }, 
        {
            "location": "/docker/get-started/#part-3-services", 
            "text": "About services  docker-compose.yml file", 
            "title": "Part 3: Services"
        }, 
        {
            "location": "/docker/get-started/#part-4-swarms", 
            "text": "Understanding Swarm clusters  Set up your swarm  Deploy your app on the swarm cluster", 
            "title": "Part 4: Swarms"
        }, 
        {
            "location": "/docker/get-started/#part-5-stacks", 
            "text": "Add a new service and redeploy  Persist the data", 
            "title": "Part 5: Stacks"
        }, 
        {
            "location": "/docker/get-started/#part-6-deploy-your-app", 
            "text": "", 
            "title": "Part 6: Deploy your app"
        }, 
        {
            "location": "/docker/develop/", 
            "text": "Overview\n\n\nThis is our developer docs about Docker. Our docs includes:\n\n\nDocker development best practices\n\n\n\n\nHow to keep your images small\n\n\nStart with an appropriate base image\n\n\nUse multistage builds\n\n\nIf you have multiple images with a lot in common, consider creating your own \nhttps://docs.docker.com/engine/userguide/eng-image/baseimages/\n with the shared components, and basing your unique images on that\n\n\n\n\n\n\nWhere and how to persist application data\n\n\nStore data using volumes.\n\n\n\n\n\n\nUse swarm services when possible\n\n\nUse CI/CD for testing and deployment\n\n\n\n\nBest practices for writing Dockerfiles\n\n\n\n\n\n\nCreate ephemeral containers\n\n\nBy \"ephemeral\" we mean that the container can be stopped and destroyed, then rebuilt and replaced with an absolute minimum set up and configuration.\n- Understand build context\n- Pipe Dockerfile through stdin\n\n\nDocker 17.05 and higher (remote build-context)\n\ndocker build -t foo https://github.com/thajeztah/pgadmin4-docker.git -f-\nEOF\n\n\nFROM busybox\n\n\nCOPY LICENSE config_local.py /usr/local/lib/python2.7/site-packages/pgadmin4/\n\n\nEOF\n\n\n\n- Exclude with .dockerignore\n- Use multi-stage builds\nA Dockerfile for a Go application could look like:\n\nFROM golang:1.9.2-alpine3.6 AS build\n\n# Install tools required for project\n# Run `docker build --no-cache .` to update dependencies\nRUN apk add --no-cache git\nRUN go get github.com/golang/dep/cmd/dep\n\n# List project dependencies with Gopkg.toml and Gopkg.lock\n# These layers are only re-built when Gopkg files are updated\nCOPY Gopkg.lock Gopkg.toml /go/src/project/\nWORKDIR /go/src/project/\n# Install library dependencies\nRUN dep ensure -vendor-only\n\n# Copy the entire project and build it\n# This layer is rebuilt when a file changes in the project directory\nCOPY . /go/src/project/\nRUN go build -o /bin/project\n\n# This results in a single layer image\nFROM scratch\nCOPY --from=build /bin/project /bin/project\nENTRYPOINT [\n/bin/project\n]\nCMD [\n--help\n]\n\n\n- Don\u2019t install unnecessary packages\n- Decouple applications\n\n\n\n\nEach container should have only one concern. Decoupling applications into multiple containers makes it easier to scale horizontally and reuse containers. \n\n\nUse your best judgment to keep containers as clean and modular as possible. If containers depend on each other, you can use \nDocker container networks\n to ensure that these containers can communicate.\n\n\nMinimize the number of layers\n\n\nSort multi-line arguments\n\n\n\n\nAdding a space before a backslash () add the end of line to sorting multi-line arguments.\n- Leverage build cache\n\n\nIf you do not want to use the cache at all, you can use the --no-cache=true option on the docker build command.\n\n\nDockerfile instructions\n\n\n\n\n\n\nFROM\n\n\nWhenever possible, use current official repositories as the basis for your images. We recommend the \nAlpine image\n as it is tightly controlled and small in size (currently under 5 MB), while still being a full Linux distribution.\n\n\n\n\n\n\nLABEL\n\n\n\n\n\n\nRUN\n\n\n\n\nSplit long or complex RUN statements on multiple lines separated with backslashes to make your Dockerfile more readable, understandable, and maintainable.\n\n\n\n\nAPT-GET\n\n\nUsing RUN apt-get update \n apt-get install -y ensures your Dockerfile installs the latest package versions with no further coding or manual intervention.\n\nRUN apt-get update \n apt-get install -y \\\n    aufs-tools \\\n    automake \\\n    build-essential \\\n    curl \\\n    dpkg-sig \\\n    libcap-dev \\\n    libsqlite3-dev \\\n    mercurial \\\n    reprepro \\\n    ruby1.9.1 \\\n    ruby1.9.1-dev \\\n    s3cmd=1.1.* \\\n \n rm -rf /var/lib/apt/lists/*\n\n\n    - USING PIPES\nSome RUN commands depend on the ability to pipe the output of one command into another, using the pipe character (|)\n\nRUN wget -O - https://some.site | wc -l \n /number\n\n\n\n\n\n\n\n\n\n\n\nCMD\n\n\nThe CMD instruction should be used to run the software contained by your image, along with any arguments. CMD should almost always be used in the form of CMD [\u201cexecutable\u201d, \u201cparam1\u201d, \u201cparam2\u201d\u2026].\n\n\n\n\n\n\nEXPOSE\n\n\nThe EXPOSE instruction indicates the ports on which a container listens for connections. Consequently, you should use the common, traditional port for your application.\n\n\n\n\n\n\nENV\n\n\nThe ENV instruction is also useful for providing required environment variables specific to services you wish to containerize.\n\n\n\n\n\n\nADD or COPY\n\n\n\n\nCOPY only supports the basic copying of local files into the container, while ADD has some features (like local-only tar extraction and remote URL support) that are not immediately obvious.\n\n\nIf you have multiple Dockerfile steps that use different files from your context, COPY them individually, rather than all at once.\n\n\n\n\n\n\n\n\nENTRYPOINT\n\n\nThe best use for ENTRYPOINT is to set the image\u2019s main command, allowing that image to be run as though it was that command (and then use CMD as the default flags).\n\n\n\n\n\n\nVOLUME\n\n\nThe VOLUME instruction should be used to expose any database storage area, configuration storage, or files/folders created by your docker container. You are strongly encouraged to use VOLUME for any mutable and/or user-serviceable parts of your image.\n\n\n\n\n\n\nUSER\n\n\nIf a service can run without privileges, use USER to change to a non-root user.\n\n\n\n\n\n\nWORKDIR\n\n\n\n\n\n\nONBUILD", 
            "title": "Develop with Docker"
        }, 
        {
            "location": "/docker/develop/#overview", 
            "text": "This is our developer docs about Docker. Our docs includes:", 
            "title": "Overview"
        }, 
        {
            "location": "/docker/develop/#docker-development-best-practices", 
            "text": "How to keep your images small  Start with an appropriate base image  Use multistage builds  If you have multiple images with a lot in common, consider creating your own  https://docs.docker.com/engine/userguide/eng-image/baseimages/  with the shared components, and basing your unique images on that    Where and how to persist application data  Store data using volumes.    Use swarm services when possible  Use CI/CD for testing and deployment", 
            "title": "Docker development best practices"
        }, 
        {
            "location": "/docker/develop/#best-practices-for-writing-dockerfiles", 
            "text": "Create ephemeral containers  By \"ephemeral\" we mean that the container can be stopped and destroyed, then rebuilt and replaced with an absolute minimum set up and configuration.\n- Understand build context\n- Pipe Dockerfile through stdin  Docker 17.05 and higher (remote build-context) docker build -t foo https://github.com/thajeztah/pgadmin4-docker.git -f- EOF  FROM busybox  COPY LICENSE config_local.py /usr/local/lib/python2.7/site-packages/pgadmin4/  EOF  \n- Exclude with .dockerignore\n- Use multi-stage builds\nA Dockerfile for a Go application could look like: FROM golang:1.9.2-alpine3.6 AS build\n\n# Install tools required for project\n# Run `docker build --no-cache .` to update dependencies\nRUN apk add --no-cache git\nRUN go get github.com/golang/dep/cmd/dep\n\n# List project dependencies with Gopkg.toml and Gopkg.lock\n# These layers are only re-built when Gopkg files are updated\nCOPY Gopkg.lock Gopkg.toml /go/src/project/\nWORKDIR /go/src/project/\n# Install library dependencies\nRUN dep ensure -vendor-only\n\n# Copy the entire project and build it\n# This layer is rebuilt when a file changes in the project directory\nCOPY . /go/src/project/\nRUN go build -o /bin/project\n\n# This results in a single layer image\nFROM scratch\nCOPY --from=build /bin/project /bin/project\nENTRYPOINT [ /bin/project ]\nCMD [ --help ] \n- Don\u2019t install unnecessary packages\n- Decouple applications   Each container should have only one concern. Decoupling applications into multiple containers makes it easier to scale horizontally and reuse containers.   Use your best judgment to keep containers as clean and modular as possible. If containers depend on each other, you can use  Docker container networks  to ensure that these containers can communicate.  Minimize the number of layers  Sort multi-line arguments   Adding a space before a backslash () add the end of line to sorting multi-line arguments.\n- Leverage build cache  If you do not want to use the cache at all, you can use the --no-cache=true option on the docker build command.", 
            "title": "Best practices for writing Dockerfiles"
        }, 
        {
            "location": "/docker/develop/#dockerfile-instructions", 
            "text": "FROM  Whenever possible, use current official repositories as the basis for your images. We recommend the  Alpine image  as it is tightly controlled and small in size (currently under 5 MB), while still being a full Linux distribution.    LABEL    RUN   Split long or complex RUN statements on multiple lines separated with backslashes to make your Dockerfile more readable, understandable, and maintainable.   APT-GET  Using RUN apt-get update   apt-get install -y ensures your Dockerfile installs the latest package versions with no further coding or manual intervention. RUN apt-get update   apt-get install -y \\\n    aufs-tools \\\n    automake \\\n    build-essential \\\n    curl \\\n    dpkg-sig \\\n    libcap-dev \\\n    libsqlite3-dev \\\n    mercurial \\\n    reprepro \\\n    ruby1.9.1 \\\n    ruby1.9.1-dev \\\n    s3cmd=1.1.* \\\n   rm -rf /var/lib/apt/lists/* \n    - USING PIPES\nSome RUN commands depend on the ability to pipe the output of one command into another, using the pipe character (|) RUN wget -O - https://some.site | wc -l   /number      CMD  The CMD instruction should be used to run the software contained by your image, along with any arguments. CMD should almost always be used in the form of CMD [\u201cexecutable\u201d, \u201cparam1\u201d, \u201cparam2\u201d\u2026].    EXPOSE  The EXPOSE instruction indicates the ports on which a container listens for connections. Consequently, you should use the common, traditional port for your application.    ENV  The ENV instruction is also useful for providing required environment variables specific to services you wish to containerize.    ADD or COPY   COPY only supports the basic copying of local files into the container, while ADD has some features (like local-only tar extraction and remote URL support) that are not immediately obvious.  If you have multiple Dockerfile steps that use different files from your context, COPY them individually, rather than all at once.     ENTRYPOINT  The best use for ENTRYPOINT is to set the image\u2019s main command, allowing that image to be run as though it was that command (and then use CMD as the default flags).    VOLUME  The VOLUME instruction should be used to expose any database storage area, configuration storage, or files/folders created by your docker container. You are strongly encouraged to use VOLUME for any mutable and/or user-serviceable parts of your image.    USER  If a service can run without privileges, use USER to change to a non-root user.    WORKDIR    ONBUILD", 
            "title": "Dockerfile instructions"
        }, 
        {
            "location": "/docker/config-network/", 
            "text": "", 
            "title": "Configure networking"
        }, 
        {
            "location": "/docker/sample/", 
            "text": "Sample use Docker\n\n\nMagento 2\n\n\nDocker Magento 2\n\n\nDocker compose with: Magento 2 + PHP 7.1 + Apache2 + MariaDb + PhpMyAdmin\n\n\nMkdocs\n\n\nDocker Mkdocs\n\n\nDocker compose with: Alpine\n\n\nEducation Social Network (ESN)\n\n\nDocker ESN\n\n\nDocker: \n\n\n\n\nDocker file for Service\n\n\nDocker file for Web App", 
            "title": "Sample"
        }, 
        {
            "location": "/docker/sample/#sample-use-docker", 
            "text": "", 
            "title": "Sample use Docker"
        }, 
        {
            "location": "/docker/sample/#magento-2", 
            "text": "Docker Magento 2  Docker compose with: Magento 2 + PHP 7.1 + Apache2 + MariaDb + PhpMyAdmin", 
            "title": "Magento 2"
        }, 
        {
            "location": "/docker/sample/#mkdocs", 
            "text": "Docker Mkdocs  Docker compose with: Alpine", 
            "title": "Mkdocs"
        }, 
        {
            "location": "/docker/sample/#education-social-network-esn", 
            "text": "Docker ESN  Docker:    Docker file for Service  Docker file for Web App", 
            "title": "Education Social Network (ESN)"
        }, 
        {
            "location": "/docker/note/", 
            "text": "Note about Docker\n\n\n\n\nOn Docker container, if you want install module: Ex: unzip\n    \napt update \n apt install unzip\n\n\n\n\n\nHow to use Docker without sudo on Ubuntu\n\n\n\n\nMethod 1\n: \n    \nsudo usermod -aG docker \n$USER\n\n\n\n\n\n\nMethod 2\n: \n    Create new group if it does not exist. This command will likely fail as group maybe already exist, but let's run it anyways.\n\n\nsudo groupadd docker\n\n\nNext we need to add current user to the group.\n\nsudo gpasswd -a \n$USER\n docker\n\n\nLastly we need to reload shell in order to have new group settings applied.\n\nnewgrp docker\n\n\n3.", 
            "title": "Note"
        }, 
        {
            "location": "/docker/note/#note-about-docker", 
            "text": "On Docker container, if you want install module: Ex: unzip\n     apt update   apt install unzip   How to use Docker without sudo on Ubuntu   Method 1 : \n     sudo usermod -aG docker  $USER    Method 2 : \n    Create new group if it does not exist. This command will likely fail as group maybe already exist, but let's run it anyways.  sudo groupadd docker \nNext we need to add current user to the group. sudo gpasswd -a  $USER  docker \nLastly we need to reload shell in order to have new group settings applied. newgrp docker \n3.", 
            "title": "Note about Docker"
        }, 
        {
            "location": "/jenkins/", 
            "text": "Overview\n\n\nThis is our developer docs about Jenkins. Our docs inclues:\n\n\n\n\nInstall\n\n\nNote", 
            "title": "Overview"
        }, 
        {
            "location": "/jenkins/#overview", 
            "text": "This is our developer docs about Jenkins. Our docs inclues:   Install  Note", 
            "title": "Overview"
        }, 
        {
            "location": "/jenkins/install/", 
            "text": "Overview\n\n\nThis is our developer docs about How to install Jenkins\n\n\nInstall Jenkins\n\n\nDownload and run Jenkins\n\n\nRun Jenkins in Docker\n\n\n\n\nInstall Docker\n\n\nRun the \njenkinsci/blueocean\n image as a container in Docker using the following \ndocker run\n command (bearing in mind that this command automatically downloads the image if this hasn\u2019t been done):\n    \ndocker run \n\\\n\n  --rm \n\\\n\n  -u root \n\\\n\n  -p \n8080\n:8080 \n\\\n\n  -v jenkins-data:/var/jenkins_home \n\\\n\n  -v /var/run/docker.sock:/var/run/docker.sock \n\\\n\n  -v \n$HOME\n:/home \n\\\n\n  jenkinsci/blueocean\n\n\n\nProceed to the \nPost-installation setup wizard\n.", 
            "title": "Install"
        }, 
        {
            "location": "/jenkins/install/#overview", 
            "text": "This is our developer docs about How to install Jenkins", 
            "title": "Overview"
        }, 
        {
            "location": "/jenkins/install/#install-jenkins", 
            "text": "", 
            "title": "Install Jenkins"
        }, 
        {
            "location": "/jenkins/install/#download-and-run-jenkins", 
            "text": "", 
            "title": "Download and run Jenkins"
        }, 
        {
            "location": "/jenkins/install/#run-jenkins-in-docker", 
            "text": "Install Docker  Run the  jenkinsci/blueocean  image as a container in Docker using the following  docker run  command (bearing in mind that this command automatically downloads the image if this hasn\u2019t been done):\n     docker run  \\ \n  --rm  \\ \n  -u root  \\ \n  -p  8080 :8080  \\ \n  -v jenkins-data:/var/jenkins_home  \\ \n  -v /var/run/docker.sock:/var/run/docker.sock  \\ \n  -v  $HOME :/home  \\ \n  jenkinsci/blueocean  Proceed to the  Post-installation setup wizard .", 
            "title": "Run Jenkins in Docker"
        }, 
        {
            "location": "/jenkins/note/", 
            "text": "Note about Jenkins\n\n\nJenkins - Docker\n\n\n\n\nWhen run bash scripts Jenkins from Git directory show error \"Permission denied\"\n\n\nCause: File not permission excute\n\n\nHow to fix:\n\n\nIn command line, go to folder Git.\n\n\nProvide permission for all file are can excute then commit add file:\n    \n    sudo chmod -R \n777\n ./\n    git add .\n    git commit -m \nupdate permission of file", 
            "title": "Note"
        }, 
        {
            "location": "/jenkins/note/#note-about-jenkins", 
            "text": "", 
            "title": "Note about Jenkins"
        }, 
        {
            "location": "/jenkins/note/#jenkins-docker", 
            "text": "When run bash scripts Jenkins from Git directory show error \"Permission denied\"  Cause: File not permission excute  How to fix:  In command line, go to folder Git.  Provide permission for all file are can excute then commit add file:\n         sudo chmod -R  777  ./\n    git add .\n    git commit -m  update permission of file", 
            "title": "Jenkins - Docker"
        }, 
        {
            "location": "/mkdocs/", 
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n\n\n\n\n\nThemes\n\n\n\n\nhttps://squidfunk.github.io/mkdocs-material/", 
            "title": "Mkdocs"
        }, 
        {
            "location": "/mkdocs/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/mkdocs/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/mkdocs/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/mkdocs/#themes", 
            "text": "https://squidfunk.github.io/mkdocs-material/", 
            "title": "Themes"
        }
    ]
}